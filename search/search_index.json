{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About netID \u00b6 European netID Foundation \u00b6 The European netID Foundation (EnID) was founded in March 2018 by Mediengruppe RTL Deutschland, ProSiebenSat.1 and United Internet. Its aim is to establish the netID Single Sign-on as a European alternative to US providers. With netID, users can organize their privacy settings for digital services transparently and in compliance with data protection regulations. To this end, the foundation has developed an open standard that enables users from all sectors to access all internet services of partners of the European netID Foundation with the same login. Right from the start which focuses the initial core market Germany, 38 million accounts covering roughly about 60% of the Germany online population are ready to be used. netID Developer Portal \u00b6 The netID Developer Portal is the main resource for developers/digital services that want to leverage netID with their online services. It provides all the necessary resources and features to integrate the netID Single Sign-on. In the future, individual reports, information about planned further developments of the netID and much more will be available in the Developer Portal. For details see Developer Portal netID Login Standard \u00b6 netID is the new, European login standard. The European netID Foundation provides the federated Single Sign-on \"netID\", which allows digital services (netID partners) to register and login netID Users based on their account at so called netID Account Providers. netID Partners can individually request authorized data transfer (profile information) via netID, whereas users get a centralized overview and control about which services they are using, and which data was/is transferred to each of them via netID. netID Account Providers are in charge for authentication, authorization and transfer of profile information, whereas the so called netID Broker, that is operated by the EnID, orchestrates data transfer and routing between users and the digital services they are using. Technically netID is based on the industry standard OpenID Connect, thus is easily and seamlessly usable by netID Partners. Based on the above, visitors and customers can discover and use your digital services and websites leveraging netID in a particularly secure, simple and convenient way. The netID Single Sign-on is provided free of charge and is open for anyone after registration and setup using the afore mentioned netID Developer Portal. For details see Single Sign-On Documentation netID Privacy Management \u00b6 In addition to the Single Sign-on netID Partners can also leverage netID to allow their users to manage their overall privacy settings in terms of commercial data use and offers a convenient, scalable and most importantly server-based/permanent way to manage a user\u2019s consent status or more generally a status in terms of legal grounds for commercial data use. To enable that netID provides services to integrate a netID Partners Consent Management Platform in addition to its Single Sign-on services. Please note that the integration in terms of privacy management/commercial data use is not free of charge and cannot be managed via the netID Developer Portal in a self-service fashion. In case you are interested please reach out to us. For details see CMP Integration . User base and advantages \u00b6 netID can be used with any e-mail address in general. Having that said over 35 million users can already use netID without further registration. This includes all e-mail users of the brands WEB.DE and GMX. Users who do not yet have a netID Account can create a free netID Account with one of the netID Account Providers with just a few clicks. Optimized & convenient : Fewer interruptions in the purchasing process, less \"password recovery\" effort. Significantly better conversion rates in the registration process for new customers. Free & Federated : Easy registration and free administration of your netID Developer Account with as many netID integrations as you wish. Secure & independent : Decentralized Data Storage. netID Partners are in full control of their (respectively their users) own first-party data. User base & convenience : Already more than 35 million users with existing netID Accounts. Usually no need for an additional registration for end-users when using netID.","title":"About netID"},{"location":"#about-netid","text":"","title":"About netID"},{"location":"#european-netid-foundation","text":"The European netID Foundation (EnID) was founded in March 2018 by Mediengruppe RTL Deutschland, ProSiebenSat.1 and United Internet. Its aim is to establish the netID Single Sign-on as a European alternative to US providers. With netID, users can organize their privacy settings for digital services transparently and in compliance with data protection regulations. To this end, the foundation has developed an open standard that enables users from all sectors to access all internet services of partners of the European netID Foundation with the same login. Right from the start which focuses the initial core market Germany, 38 million accounts covering roughly about 60% of the Germany online population are ready to be used.","title":"European netID Foundation"},{"location":"#netid-developer-portal","text":"The netID Developer Portal is the main resource for developers/digital services that want to leverage netID with their online services. It provides all the necessary resources and features to integrate the netID Single Sign-on. In the future, individual reports, information about planned further developments of the netID and much more will be available in the Developer Portal. For details see Developer Portal","title":"netID Developer Portal"},{"location":"#netid-login-standard","text":"netID is the new, European login standard. The European netID Foundation provides the federated Single Sign-on \"netID\", which allows digital services (netID partners) to register and login netID Users based on their account at so called netID Account Providers. netID Partners can individually request authorized data transfer (profile information) via netID, whereas users get a centralized overview and control about which services they are using, and which data was/is transferred to each of them via netID. netID Account Providers are in charge for authentication, authorization and transfer of profile information, whereas the so called netID Broker, that is operated by the EnID, orchestrates data transfer and routing between users and the digital services they are using. Technically netID is based on the industry standard OpenID Connect, thus is easily and seamlessly usable by netID Partners. Based on the above, visitors and customers can discover and use your digital services and websites leveraging netID in a particularly secure, simple and convenient way. The netID Single Sign-on is provided free of charge and is open for anyone after registration and setup using the afore mentioned netID Developer Portal. For details see Single Sign-On Documentation","title":"netID Login Standard"},{"location":"#netid-privacy-management","text":"In addition to the Single Sign-on netID Partners can also leverage netID to allow their users to manage their overall privacy settings in terms of commercial data use and offers a convenient, scalable and most importantly server-based/permanent way to manage a user\u2019s consent status or more generally a status in terms of legal grounds for commercial data use. To enable that netID provides services to integrate a netID Partners Consent Management Platform in addition to its Single Sign-on services. Please note that the integration in terms of privacy management/commercial data use is not free of charge and cannot be managed via the netID Developer Portal in a self-service fashion. In case you are interested please reach out to us. For details see CMP Integration .","title":"netID Privacy Management"},{"location":"#user-base-and-advantages","text":"netID can be used with any e-mail address in general. Having that said over 35 million users can already use netID without further registration. This includes all e-mail users of the brands WEB.DE and GMX. Users who do not yet have a netID Account can create a free netID Account with one of the netID Account Providers with just a few clicks. Optimized & convenient : Fewer interruptions in the purchasing process, less \"password recovery\" effort. Significantly better conversion rates in the registration process for new customers. Free & Federated : Easy registration and free administration of your netID Developer Account with as many netID integrations as you wish. Secure & independent : Decentralized Data Storage. netID Partners are in full control of their (respectively their users) own first-party data. User base & convenience : Already more than 35 million users with existing netID Accounts. Usually no need for an additional registration for end-users when using netID.","title":"User base and advantages"},{"location":"faq/","text":"Frequently asked questions \u00b6 General \u00b6 What is netID? The European netID Foundation provides the federated Single Sign-on \"netID\", which allows digital services (netID partners) to register and login netID Users based on their account at so called netID Account Provides. netID Partners can individually request authorized data transfer (profile information) via netID, whereas users get a centralized overview and control about which services they are using, and which data was/is transferred to each of them via netID. What is the netID Developer Portal? The netID Developer Portal is the main resource for developers/digital services that want to leverage netID with their online services. It provides all the necessary resources and features to integrate the netID Single Sign-on. In the future, individual reports, information about planned further developments of the netID and much more will be available in the Developer Portal. Who can use the netID Developer Portal? All netID Partners who want to integrate the netID service into their application can use the netID Developer Portal. How much does the integration of the netID Single Sign-on service cost? The use of the netID Single Sign-on is free of charge. Developer Portal \u00b6 Where can I find information on using the Developer Portal? Please check the Getting Started Guide and the step by step Tutorials . How often are reports created? Reports are generated at daily intervals. How many days does a report cover? A report can contain a maximum of 366 days. The aggregates cover a rolling time frame (summarized to 1 day, 7 days, 30 days). Technical Integration \u00b6 Are there plugins for an easy integration of netID? There are several plugins for various popular CMS and e-Commerce systems. The number of supported systems is constantly growing. Are there SDKs or frameworks that I can use for netID integration? There are several implementations of OpenID Connect in different programming languages. More details can be found in the Single Sign-on Documentation . Is there an indicator for the system status? A Health Check report for the availability of the netID systems and subsystems is available in the netID Developer Portal. A login is required. Contact \u00b6 How can I get in contact with you? Please use our contact options in the Developer Portal or send us an e-mail: support@developer.netid.de How do I report a bug? Please use our contact options in the Developer Portal to inform us about a bug or to submit a feature request. How can I add my service to the partner page? The partner page is available at https://partner.netid.de/ . For further information please contact us at partnermanagement@netid.de .","title":"FAQ"},{"location":"faq/#frequently-asked-questions","text":"","title":"Frequently asked questions"},{"location":"faq/#general","text":"What is netID? The European netID Foundation provides the federated Single Sign-on \"netID\", which allows digital services (netID partners) to register and login netID Users based on their account at so called netID Account Provides. netID Partners can individually request authorized data transfer (profile information) via netID, whereas users get a centralized overview and control about which services they are using, and which data was/is transferred to each of them via netID. What is the netID Developer Portal? The netID Developer Portal is the main resource for developers/digital services that want to leverage netID with their online services. It provides all the necessary resources and features to integrate the netID Single Sign-on. In the future, individual reports, information about planned further developments of the netID and much more will be available in the Developer Portal. Who can use the netID Developer Portal? All netID Partners who want to integrate the netID service into their application can use the netID Developer Portal. How much does the integration of the netID Single Sign-on service cost? The use of the netID Single Sign-on is free of charge.","title":"General"},{"location":"faq/#developer-portal","text":"Where can I find information on using the Developer Portal? Please check the Getting Started Guide and the step by step Tutorials . How often are reports created? Reports are generated at daily intervals. How many days does a report cover? A report can contain a maximum of 366 days. The aggregates cover a rolling time frame (summarized to 1 day, 7 days, 30 days).","title":"Developer Portal"},{"location":"faq/#technical-integration","text":"Are there plugins for an easy integration of netID? There are several plugins for various popular CMS and e-Commerce systems. The number of supported systems is constantly growing. Are there SDKs or frameworks that I can use for netID integration? There are several implementations of OpenID Connect in different programming languages. More details can be found in the Single Sign-on Documentation . Is there an indicator for the system status? A Health Check report for the availability of the netID systems and subsystems is available in the netID Developer Portal. A login is required.","title":"Technical Integration"},{"location":"faq/#contact","text":"How can I get in contact with you? Please use our contact options in the Developer Portal or send us an e-mail: support@developer.netid.de How do I report a bug? Please use our contact options in the Developer Portal to inform us about a bug or to submit a feature request. How can I add my service to the partner page? The partner page is available at https://partner.netid.de/ . For further information please contact us at partnermanagement@netid.de .","title":"Contact"},{"location":"status/","text":"System Health Status \u00b6 The public netID endpoint for the system health is: https://status.netid.de Example Status Response { \"updatedAt\" : \"2020-07-15T12:15:25.655496Z\" , \"status\" : \"DEGRADED\" , // \"overall\" state , a aggregation of usecase states \"details\" : { // optional details - additional information about subsystems. \"broker\" : { \"status\" : \"OK\" }, \"op-ni\" : { \"status\" : \"SEVERE\" }, \"op-webde\" : { \"status\" : \"OK\" }, \"op-gmx\" : { \"status\" : \"OK\" }, \"op-7pass\" : { \"status\" : \"OK\" }, \"permissionservice\" : { \"status\" : \"OK\" } }, \"usecases\" : { // optional usecases \"sso-login\" : { \"status\" : \"DEGRADED\" } } } status color meaning OK green No reported issues and request are completed normally. DEGRADED yellow Some noncritical issues with the subsystem/usecase. SEVERE red A definitive proof of an outage has been found.","title":"System Status"},{"location":"status/#system-health-status","text":"The public netID endpoint for the system health is: https://status.netid.de Example Status Response { \"updatedAt\" : \"2020-07-15T12:15:25.655496Z\" , \"status\" : \"DEGRADED\" , // \"overall\" state , a aggregation of usecase states \"details\" : { // optional details - additional information about subsystems. \"broker\" : { \"status\" : \"OK\" }, \"op-ni\" : { \"status\" : \"SEVERE\" }, \"op-webde\" : { \"status\" : \"OK\" }, \"op-gmx\" : { \"status\" : \"OK\" }, \"op-7pass\" : { \"status\" : \"OK\" }, \"permissionservice\" : { \"status\" : \"OK\" } }, \"usecases\" : { // optional usecases \"sso-login\" : { \"status\" : \"DEGRADED\" } } } status color meaning OK green No reported issues and request are completed normally. DEGRADED yellow Some noncritical issues with the subsystem/usecase. SEVERE red A definitive proof of an outage has been found.","title":"System Health Status"},{"location":"cmp/","text":"General information \u00b6 In addition to the Single Sign-on, netID Partners can also use netID to enable users to manage their general data protection settings regarding the usage of their personal data. This offers a convenient, scalable and most importantly server-based/permanent way to manage a user\u2019s consent status or more generally a status in terms of legal grounds for commercial data usage. To achieve this, netID supports the TCF Standard of the IAB Europe. netID (here specifically the netID Permission Center) offers the following services to integrate a netID Partner's Consent Management Platform. These APIs enable a Partner/his CMP to manage a TC String associated to an individual user. In addition, netID specific consents (netID Permissions) can be managed, which allow a netID Partner to identify a user while using his services. In the following descriptions we will refer to the user\u2019s overall privacy settings as privacy status . All permissions (TCF/netID specific) stored/managed using netID are always scoped to an individual netID Partner. That means in terms of the CMP, that netID only supports service-specific scoped TC Strings, and more importantly that the user\u2019s explicit consent to be identified is managed/given per netID Partner. netID doesn't support global scoped TC Strings. netID Permission Center \u00b6 The netID Permission Center is a technical component in which consents and more generally a TCF status for netID user is stored. For this purpose, the netID Permission Center offers various interfaces, which enable read and write access. Services Overview \u00b6 The following services are provided by the netID Permission Center to allow a CMP to store/manage a user\u2019s privacy status for a specific netID Partner: service meaning endpoint (QA environment) endpoint (LIVE environment) READ SERVICE Read the netID identifier (TPID), netID Permissions and TC Strings for an individual user einwilligungsspeicher.qa.netid.de einwilligungsspeicher.netid.de WRITE SERVICE Write netID Permissions and TC Strings for an individual user einwilligen.qa.netid.de einwilligen.netid.de DATA EXPORT SERVICE Export the netID permissions and TC Strings for the respective netID Partner einwilligungsuebersicht.qa.netid.de einwilligungsuebersicht.netid.de Read/Write Services \u00b6 The READ and WRITE services are based on prior user authentication and are provided in two variants, with similar functions for the netID Partner's Consent Management Platform. Browser-based API: Usage based on an already established user authentication stored within the respective browser (ex-ante) Server-based API: Usage based on an access token requested via the netID Broker as described here The distinction between browser- and server-based mainly relates to how an active user is authenticated before using the API/from where the APIs are being called. Call information: parameters / header / cookies name type function description tapp_id parameter authentication is provided by netID for each publisher upon activation and must be passed unchanged with each request. origin header authentication is passed by the browser for each XMLHttpsRequest (AJAX). The value must be a URL registered for this netID Partner (TAPP). tpid_sec cookie user authentication is located in the netid.de domain and is automatically passed on by the browser - if available (browser-based API). token parameter access token can be retrieved by the partner via the SSO process, is passed to access the API/to identify the user (server-based API) Data export service \u00b6 The export API allows a partner to export the netID Permissions/TC String as well as deltas on those. The API is only available server based . Authentication for API usage \u00b6 Authentication of netID Partners for the browser-based APIs is handled via the parameter tapp_id and the origin header. Access is secured via CORS . Multiple URLs are allowed per publisher (TAPP). These URLs must be registered in advance The read/write request must be made from an eligible URL Authentication for the server-based APIs is handled as follows. The user-specific read/write access is secured via access token (authentication). Data Export uses basic authentication User authentication when using APIs \u00b6 The authentication of the individual netID user depends on the API that is used, with tpid_sec (browser-based) or token (server-based). tpid_sec is an encrypted ID Token (JWT) which is stored on the domain netid.de as part of the login process via netID SSO/login with the netID Account Provider. This token is not accessible for netID Partners/the CMP. The access token can be retrieved by a netID Partner during the login process via netID SSO in the form of a claim (OpenID Connect). This enables read/write access independently of the browser session (limited in time). If, depending on the context, the token or the tpid_sec are not available, expired or invalid, a publisher cannot read/write the TC String and of course cannot access the TPID.","title":"General information"},{"location":"cmp/#general-information","text":"In addition to the Single Sign-on, netID Partners can also use netID to enable users to manage their general data protection settings regarding the usage of their personal data. This offers a convenient, scalable and most importantly server-based/permanent way to manage a user\u2019s consent status or more generally a status in terms of legal grounds for commercial data usage. To achieve this, netID supports the TCF Standard of the IAB Europe. netID (here specifically the netID Permission Center) offers the following services to integrate a netID Partner's Consent Management Platform. These APIs enable a Partner/his CMP to manage a TC String associated to an individual user. In addition, netID specific consents (netID Permissions) can be managed, which allow a netID Partner to identify a user while using his services. In the following descriptions we will refer to the user\u2019s overall privacy settings as privacy status . All permissions (TCF/netID specific) stored/managed using netID are always scoped to an individual netID Partner. That means in terms of the CMP, that netID only supports service-specific scoped TC Strings, and more importantly that the user\u2019s explicit consent to be identified is managed/given per netID Partner. netID doesn't support global scoped TC Strings.","title":"General information"},{"location":"cmp/#netid-permission-center","text":"The netID Permission Center is a technical component in which consents and more generally a TCF status for netID user is stored. For this purpose, the netID Permission Center offers various interfaces, which enable read and write access.","title":"netID Permission Center"},{"location":"cmp/#services-overview","text":"The following services are provided by the netID Permission Center to allow a CMP to store/manage a user\u2019s privacy status for a specific netID Partner: service meaning endpoint (QA environment) endpoint (LIVE environment) READ SERVICE Read the netID identifier (TPID), netID Permissions and TC Strings for an individual user einwilligungsspeicher.qa.netid.de einwilligungsspeicher.netid.de WRITE SERVICE Write netID Permissions and TC Strings for an individual user einwilligen.qa.netid.de einwilligen.netid.de DATA EXPORT SERVICE Export the netID permissions and TC Strings for the respective netID Partner einwilligungsuebersicht.qa.netid.de einwilligungsuebersicht.netid.de","title":"Services Overview"},{"location":"cmp/#readwrite-services","text":"The READ and WRITE services are based on prior user authentication and are provided in two variants, with similar functions for the netID Partner's Consent Management Platform. Browser-based API: Usage based on an already established user authentication stored within the respective browser (ex-ante) Server-based API: Usage based on an access token requested via the netID Broker as described here The distinction between browser- and server-based mainly relates to how an active user is authenticated before using the API/from where the APIs are being called. Call information: parameters / header / cookies name type function description tapp_id parameter authentication is provided by netID for each publisher upon activation and must be passed unchanged with each request. origin header authentication is passed by the browser for each XMLHttpsRequest (AJAX). The value must be a URL registered for this netID Partner (TAPP). tpid_sec cookie user authentication is located in the netid.de domain and is automatically passed on by the browser - if available (browser-based API). token parameter access token can be retrieved by the partner via the SSO process, is passed to access the API/to identify the user (server-based API)","title":"Read/Write Services"},{"location":"cmp/#data-export-service","text":"The export API allows a partner to export the netID Permissions/TC String as well as deltas on those. The API is only available server based .","title":"Data export service"},{"location":"cmp/#authentication-for-api-usage","text":"Authentication of netID Partners for the browser-based APIs is handled via the parameter tapp_id and the origin header. Access is secured via CORS . Multiple URLs are allowed per publisher (TAPP). These URLs must be registered in advance The read/write request must be made from an eligible URL Authentication for the server-based APIs is handled as follows. The user-specific read/write access is secured via access token (authentication). Data Export uses basic authentication","title":"Authentication for API usage"},{"location":"cmp/#user-authentication-when-using-apis","text":"The authentication of the individual netID user depends on the API that is used, with tpid_sec (browser-based) or token (server-based). tpid_sec is an encrypted ID Token (JWT) which is stored on the domain netid.de as part of the login process via netID SSO/login with the netID Account Provider. This token is not accessible for netID Partners/the CMP. The access token can be retrieved by a netID Partner during the login process via netID SSO in the form of a claim (OpenID Connect). This enables read/write access independently of the browser session (limited in time). If, depending on the context, the token or the tpid_sec are not available, expired or invalid, a publisher cannot read/write the TC String and of course cannot access the TPID.","title":"User authentication when using APIs"},{"location":"cmp/access-token/","text":"Requesting Access Tokens \u00b6 In order to access the server-based API netID Partners can request an access token using the netID Broker in order to allow their Consent Management Platform to access the API on the users behalf. To request an access token netID Partners request the scope permission_management when initiating an authentication flow via the netID Broker. This is supported both in conjunction with a Single Sign-on (meaning a full OpenID Connect flow with the transfer of a users personal data as requested) or standalone (meaning an OAuth 2.0 flow that only yields an access token). Requesting an access token with Single Sign-on \u00b6 Which flow is executed is controlled via the scope parameter, requesting an access token in conjunction with a Single Sign-on flow is indicated by scope=openid permission_management The below example starts a Single Sign-on flow requesting access to a users email as well as an access token. https://broker.netid.de/authorize? response_type = code & client_id =[ clientID ] & redirect_uri =[ redirect_uri ] & scope = openid permission_management & claims ={ \"userinfo\" : { \"email\" : { \"essential\" :true } } } Details on the netID Broker APIs can be found here , the access token will be provided within the users ID Token from the token endpoint as an additional claim permission_management . Example ID Token response with included access token: { \"aud\" : \"caab84a6-861....\" , // client_id of the netID Partner \"sub\" : \"0lme_TXmA_TQ....\" , // users pairwise subject identifier \"permission_management\" : { \"access_token\" : \"eyJhbGciOiJkaXIiLC....\" , \"token_type\" : \"bearer\" , \"expires_in\" : 500 }, \"auth_time\" : 1598277720 , \"iss\" : \"https:\\/\\/broker.netid.de\\/\" , \"exp\" : 1598278622 , \"iat\" : 1598277722 } Requesting an access token without Single Sign-on \u00b6 Requesting an access token without an actual user Sign-on (i.e. transfer of personal data) is initiated by only providing the scope permission_management . In this case the netID Broker executes a standard OAuth 2.0 Flow https://broker.netid.de/authorize? response_type = code & client_id =[ clientID ] & redirect_uri =[ redirect_uri ] & scope = permission_management As a result the token endpoint returns only an access token scoped for access to the netID Permission Center. Example Token response: { \"access_token\" : \"eyJhbGciOiJkaXIiLCJl..\" , \"scope\" : \"permission_management\" , \"token_type\" : \"Bearer\" , \"expires_in\" : 499 }","title":"Requesting Access Tokens"},{"location":"cmp/access-token/#requesting-access-tokens","text":"In order to access the server-based API netID Partners can request an access token using the netID Broker in order to allow their Consent Management Platform to access the API on the users behalf. To request an access token netID Partners request the scope permission_management when initiating an authentication flow via the netID Broker. This is supported both in conjunction with a Single Sign-on (meaning a full OpenID Connect flow with the transfer of a users personal data as requested) or standalone (meaning an OAuth 2.0 flow that only yields an access token).","title":"Requesting Access Tokens"},{"location":"cmp/access-token/#requesting-an-access-token-with-single-sign-on","text":"Which flow is executed is controlled via the scope parameter, requesting an access token in conjunction with a Single Sign-on flow is indicated by scope=openid permission_management The below example starts a Single Sign-on flow requesting access to a users email as well as an access token. https://broker.netid.de/authorize? response_type = code & client_id =[ clientID ] & redirect_uri =[ redirect_uri ] & scope = openid permission_management & claims ={ \"userinfo\" : { \"email\" : { \"essential\" :true } } } Details on the netID Broker APIs can be found here , the access token will be provided within the users ID Token from the token endpoint as an additional claim permission_management . Example ID Token response with included access token: { \"aud\" : \"caab84a6-861....\" , // client_id of the netID Partner \"sub\" : \"0lme_TXmA_TQ....\" , // users pairwise subject identifier \"permission_management\" : { \"access_token\" : \"eyJhbGciOiJkaXIiLC....\" , \"token_type\" : \"bearer\" , \"expires_in\" : 500 }, \"auth_time\" : 1598277720 , \"iss\" : \"https:\\/\\/broker.netid.de\\/\" , \"exp\" : 1598278622 , \"iat\" : 1598277722 }","title":"Requesting an access token with Single Sign-on"},{"location":"cmp/access-token/#requesting-an-access-token-without-single-sign-on","text":"Requesting an access token without an actual user Sign-on (i.e. transfer of personal data) is initiated by only providing the scope permission_management . In this case the netID Broker executes a standard OAuth 2.0 Flow https://broker.netid.de/authorize? response_type = code & client_id =[ clientID ] & redirect_uri =[ redirect_uri ] & scope = permission_management As a result the token endpoint returns only an access token scoped for access to the netID Permission Center. Example Token response: { \"access_token\" : \"eyJhbGciOiJkaXIiLCJl..\" , \"scope\" : \"permission_management\" , \"token_type\" : \"Bearer\" , \"expires_in\" : 499 }","title":"Requesting an access token without Single Sign-on"},{"location":"cmp/browser-based/","text":"Browser-based API (Client-Side Integration) \u00b6 Description of the browser-based integration by the CMP. API flow examples \u00b6 Obtaining a privacy status \u00b6 The following sequence illustrates the API calls initiated by a netID Partners CMP to establish a privacy status for an already authenticated user. Read APIs \u00b6 netID Identifier \u00b6 If the origin is eligible, a publisher (TAPP) can access the user\u2019s identifier ( tpid ) via the following interface: Query GET https://einwilligungsspeicher.netid.de/identification/tpid ?tapp_id = <TAPP_ID> Accept: application/vnd.netid.identification.tpid-read-v1+json Cookie: tpid_sec = <JWT_TOKEN> Origin: <ORIGIN> Response 200 OK Content-Type: application/vnd.netid.identification.tpid-read-v1+json Access-Control-Allow-Origin: <ORIGIN> Access-Control-Allow-Credentials: true { \"tpid\" : \"<TPID>|null\" \"status\" : \"OK|NO_TPID|TOKEN_ERROR|CONSENT_REQUIRED\" } Response properties tpid - Users netID Identifier. Only returned if consent \"identification\" is given, the tpid is known (i.e. user is already authenticated on the device) and status \"OK\". Otherwise null. status meaning tpid OK Call successful - In case the consent for passing the tpid is missing (\"identification\") null is returned x (-) NO_TPID There was no tpid_sec cookie available. - TOKEN_ERROR Token (JWT) in the cookie is expired or invalid. - CONSENT_REQUIRED Consent for passing the tpid (\"identification\") was revoked or declined by the user - Response behavior status code meaning 200 OK - tpid of the netID user returned 400 BAD REQUEST - missing authentication/no tpid_sec cookie available - provided token (JWT) in the tpid_sec cookie is expired or invalid 403 FORBIDDEN - missing/invalid parameters ( tapp_id , origin ) - requesting TAPP isn't active - consent for 'identification' isn't granted 404 NOT FOUND - tpid in tpid_sec cookie does not exist 410 GONE - tpid in tpid_sec cookie isn't active Read privacy status \u00b6 Query GET https://einwilligungsspeicher.netid.de/permissions/iab-permissions? tapp_id = <TAPP_ID> Accept: application/vnd.netid.permissions.iab-permissions-read-v1+json Cookie: tpid_sec = <JWT_TOKEN> Origin: <ORIGIN> Response 200 OK Content-Type: application/vnd.netid.permissions.iab-permissions-read-v1+json Access-Control-Allow-Origin: <ORIGIN> Access-Control-Allow-Credentials: true { \"tpid\" : \"<TPID>|null\" , \"tc\" : \"<TC string>|null\" , \"status\" : \"OK|NO_TPID|TOKEN_ERROR|CONSENT_REQUIRED\" } Response Properties item description tpid Users identifier ( tpid ). Only returned if consent \"identification\" is given, the tpid is known (i.e. user is already authenticated on the device) and status \"OK\". Otherwise null tc TC string stored for this tpid for this respective netID Partner (TAPP). Only with status \"OK\". Otherwise null status meaning tc tpid OK Call successful - In case the consent for passing the tpid is missing (\"identification\") null is returned, otherwise the tpid . Stored TC String is returned (might be null ) x (-) x (-) NO_TPID There was no tpid_sec cookie available. - - TOKEN_ERROR Token (JWT) in the tpid_sec cookie is expired or invalid. - - CONSENT_REQUIRED Consent for passing the tpid (\"identification\") was revoked or declined by the user x - Response behavior status code meaning 200 OK - tpid of the netID user is returned, if consent of \"identification\" is given - TC String is returned if present 400 BAD REQUEST - missing authentication/no tpid_sec cookie available - provided token (JWT) in the tpid_sec cookie is expired or invalid 403 FORBIDDEN - missing parameters ( tapp_id , origin ) - requesting TAPP isn't active 404 NOT FOUND - tpid in tpid_sec cookie does not exist - consent for \"identification\" is not granted and TC String is not available - TC String is not available 410 GONE tpid in tpid_sec cookie isn't active Write API \u00b6 Write privacy status \u00b6 Query POST https://einwilligen.netid.de/permissions/iab-permissions? tapp_id = <TAPP_ID> Content-Type: application/vnd.netid.permissions.iab-permission-write-v1+json Cookie: tpid_sec = <JWT_TOKEN> Origin: <ORIGIN> { \"identification\" : \"true|false\" , \"tc\" : \"<TC string>\" } Response 201 CREATED Location: https://einwilligungsspeicher.netid.de/permissions/iab-permissions? tapp_id = <TAPP_ID> Access-Control-Allow-Origin: <ORIGIN> Access-Control-Allow-Credentials: true { \"tpid\" : \"<TPID>|null\" , \"status\" : \"OK|NO_TPID|TOKEN_ERROR\" } Remarks If consent for \"identification\" has been given by the user, this must be signaled by passing \"identification: true\". For the avoidance of doubt, this of course requires the prior collection of this consent by the CMP. If only the TC string is to be updated and the consent for \"identification\" already exists, only the \"tc\" attribute can be passed. Both can also be written at the same time. In case of revocation the consent for \"identification\", only \"identification: false\" is passed. Request properties item description identification Boolean flag, indicating the status of the consent \"identification\". true = Consent is given false = consent is not given or revoked tc TC String which should be stored for this user in relation to the netID Partner (TCF 2.0) Response properties tpid - Users netID Identifier. Only present if consent \"Identification\" is given, the tpid is known and status is \"OK\". Otherwise null. status meaning OK TC String/consent for \"identification\" was stored. NO_TPID There was no tpid_sec cookie available. TOKEN_ERROR Token (JWT) in the cookie has expired or is invalid. Response behavior status code meaning 201 CREATED Call successful 400 BAD REQUEST - missing authentication/no tpid_sec cookie available - provided token (JWT) in the tpid_sec cookie is expired or invalid 403 FORBIDDEN - missing parameters ( tapp_id , origin ) - requesting TAPP isn't active 410 GONE tpid in tpid_sec cookie isn't active","title":"Browser-based API"},{"location":"cmp/browser-based/#browser-based-api-client-side-integration","text":"Description of the browser-based integration by the CMP.","title":"Browser-based API (Client-Side Integration)"},{"location":"cmp/browser-based/#api-flow-examples","text":"","title":"API flow examples"},{"location":"cmp/browser-based/#obtaining-a-privacy-status","text":"The following sequence illustrates the API calls initiated by a netID Partners CMP to establish a privacy status for an already authenticated user.","title":"Obtaining a privacy status"},{"location":"cmp/browser-based/#read-apis","text":"","title":"Read APIs"},{"location":"cmp/browser-based/#netid-identifier","text":"If the origin is eligible, a publisher (TAPP) can access the user\u2019s identifier ( tpid ) via the following interface: Query GET https://einwilligungsspeicher.netid.de/identification/tpid ?tapp_id = <TAPP_ID> Accept: application/vnd.netid.identification.tpid-read-v1+json Cookie: tpid_sec = <JWT_TOKEN> Origin: <ORIGIN> Response 200 OK Content-Type: application/vnd.netid.identification.tpid-read-v1+json Access-Control-Allow-Origin: <ORIGIN> Access-Control-Allow-Credentials: true { \"tpid\" : \"<TPID>|null\" \"status\" : \"OK|NO_TPID|TOKEN_ERROR|CONSENT_REQUIRED\" }","title":"netID Identifier"},{"location":"cmp/browser-based/#read-privacy-status","text":"Query GET https://einwilligungsspeicher.netid.de/permissions/iab-permissions? tapp_id = <TAPP_ID> Accept: application/vnd.netid.permissions.iab-permissions-read-v1+json Cookie: tpid_sec = <JWT_TOKEN> Origin: <ORIGIN> Response 200 OK Content-Type: application/vnd.netid.permissions.iab-permissions-read-v1+json Access-Control-Allow-Origin: <ORIGIN> Access-Control-Allow-Credentials: true { \"tpid\" : \"<TPID>|null\" , \"tc\" : \"<TC string>|null\" , \"status\" : \"OK|NO_TPID|TOKEN_ERROR|CONSENT_REQUIRED\" }","title":"Read privacy status"},{"location":"cmp/browser-based/#write-api","text":"","title":"Write API"},{"location":"cmp/browser-based/#write-privacy-status","text":"Query POST https://einwilligen.netid.de/permissions/iab-permissions? tapp_id = <TAPP_ID> Content-Type: application/vnd.netid.permissions.iab-permission-write-v1+json Cookie: tpid_sec = <JWT_TOKEN> Origin: <ORIGIN> { \"identification\" : \"true|false\" , \"tc\" : \"<TC string>\" } Response 201 CREATED Location: https://einwilligungsspeicher.netid.de/permissions/iab-permissions? tapp_id = <TAPP_ID> Access-Control-Allow-Origin: <ORIGIN> Access-Control-Allow-Credentials: true { \"tpid\" : \"<TPID>|null\" , \"status\" : \"OK|NO_TPID|TOKEN_ERROR\" } Remarks If consent for \"identification\" has been given by the user, this must be signaled by passing \"identification: true\". For the avoidance of doubt, this of course requires the prior collection of this consent by the CMP. If only the TC string is to be updated and the consent for \"identification\" already exists, only the \"tc\" attribute can be passed. Both can also be written at the same time. In case of revocation the consent for \"identification\", only \"identification: false\" is passed.","title":"Write privacy status"},{"location":"cmp/export/","text":"Data export \u00b6 Using this API netID Partners can request the consent status (privacy status) of the netID Permissions and TC strings of users unrelated to a specific context, via the specification of changed_since deltas can also be requested. netID Permissions \u00b6 Allows a netID Partner to retrieve the status with respect to netID Permissions (omitting TC information). This API can be called unrelated to the CMP. Query GET https://einwilligungsuebersicht.netid.de/permissions/iab-permissions? & tapp_id = <TAPP_ID> & changed_since = <DATE> Accept: application/vnd.netid.permissions.tapp-iab-permission-export.list-v1+json Authorization: Basic <b64 ( USERNAME:PASSWORD ) > Response 200 OK Content-Type: application/vnd.netid.permissions.tapp-iab-permission-export.list-v1+json { [ { \"tpid\" : \"<tpid>\" , \"type\" : \"IDCONSENT\" , \"status\" : \"VALID\" , \"changed_at\" : \"<timestamp>\" } , { \"tpid\" : \"<tpid>\" , \"tc\" : \"<tc-string>\" , \"changed_at\" : \"<timestamp>\" } ] } Response behavior \u00b6 status code meaning 200 OK Call successful 400 BAD REQUEST Missing parameter changed_since 401 UNAUTHORIZED No (valid) authentication provided 403 FORBIDDEN Missing parameters ( tapp_id ) and/or requesting TAPP isn't active Complete Privacy Status \u00b6 Allows a netID Partners CMP to retrieve the status with respect to netID Permissions (omitting TC information) as well as TC information. Query GET https://einwilligungsuebersicht.netid.de/permissions/iab-permissions? & cmp_id = <CMP_ID> & tapp_ids = <tapp_id_1,...,<tapp_id_n> & changed_since = <DATE> Accept: application/vnd.netid.permissions.tapp-iab-permission-export.list-v1+json Authorization: Basic <b64 ( USERNAME:PASSWORD ) > Response 200 OK Content-Type: application/vnd.netid.permissions.tapp-iab-permission-export.list-v1+json { \"tapp_permissons\" : [ { \"tapp_id\" : \"<tapp_id_1>\" , \"permissions\" : [ { \"tpid\" : \"<tpid>\" , \"type\" : \"IDCONSENT\" , \"status\" : \"VALID\" , \"changed_at\" : \"<timestamp>\" } , { \"tpid\" : \"<tpid>\" , \"tc\" : \"<tc-string>\" , \"changed_at\" : \"<timestamp>\" } ] } , { \"tapp_id\" : \"<tapp_id_2>\" , \"permissions\" : [ { \"tpid\" : \"<tpid>\" , \"type\" : \"IDCONSENT\" , \"status\" : \"VALID\" , \"changed_at\" : \"<timestamp>\" } , { \"tpid\" : \"<tpid>\" , \"tc\" : \"<tc-string>\" , \"changed_at\" : \"<timestamp>\" } ] } ] } Response behavior \u00b6 status code meaning 200 OK Call successful 400 BAD REQUEST Missing parameter changed_since 401 UNAUTHORIZED No (valid )authentication provided 403 FORBIDDEN Missing parameters ( cmp_id ), ( tapp_id ) - requesting TAPP isn't active","title":"Export API"},{"location":"cmp/export/#data-export","text":"Using this API netID Partners can request the consent status (privacy status) of the netID Permissions and TC strings of users unrelated to a specific context, via the specification of changed_since deltas can also be requested.","title":"Data export"},{"location":"cmp/export/#netid-permissions","text":"Allows a netID Partner to retrieve the status with respect to netID Permissions (omitting TC information). This API can be called unrelated to the CMP. Query GET https://einwilligungsuebersicht.netid.de/permissions/iab-permissions? & tapp_id = <TAPP_ID> & changed_since = <DATE> Accept: application/vnd.netid.permissions.tapp-iab-permission-export.list-v1+json Authorization: Basic <b64 ( USERNAME:PASSWORD ) > Response 200 OK Content-Type: application/vnd.netid.permissions.tapp-iab-permission-export.list-v1+json { [ { \"tpid\" : \"<tpid>\" , \"type\" : \"IDCONSENT\" , \"status\" : \"VALID\" , \"changed_at\" : \"<timestamp>\" } , { \"tpid\" : \"<tpid>\" , \"tc\" : \"<tc-string>\" , \"changed_at\" : \"<timestamp>\" } ] }","title":"netID Permissions"},{"location":"cmp/export/#response-behavior","text":"status code meaning 200 OK Call successful 400 BAD REQUEST Missing parameter changed_since 401 UNAUTHORIZED No (valid) authentication provided 403 FORBIDDEN Missing parameters ( tapp_id ) and/or requesting TAPP isn't active","title":"Response behavior"},{"location":"cmp/export/#complete-privacy-status","text":"Allows a netID Partners CMP to retrieve the status with respect to netID Permissions (omitting TC information) as well as TC information. Query GET https://einwilligungsuebersicht.netid.de/permissions/iab-permissions? & cmp_id = <CMP_ID> & tapp_ids = <tapp_id_1,...,<tapp_id_n> & changed_since = <DATE> Accept: application/vnd.netid.permissions.tapp-iab-permission-export.list-v1+json Authorization: Basic <b64 ( USERNAME:PASSWORD ) > Response 200 OK Content-Type: application/vnd.netid.permissions.tapp-iab-permission-export.list-v1+json { \"tapp_permissons\" : [ { \"tapp_id\" : \"<tapp_id_1>\" , \"permissions\" : [ { \"tpid\" : \"<tpid>\" , \"type\" : \"IDCONSENT\" , \"status\" : \"VALID\" , \"changed_at\" : \"<timestamp>\" } , { \"tpid\" : \"<tpid>\" , \"tc\" : \"<tc-string>\" , \"changed_at\" : \"<timestamp>\" } ] } , { \"tapp_id\" : \"<tapp_id_2>\" , \"permissions\" : [ { \"tpid\" : \"<tpid>\" , \"type\" : \"IDCONSENT\" , \"status\" : \"VALID\" , \"changed_at\" : \"<timestamp>\" } , { \"tpid\" : \"<tpid>\" , \"tc\" : \"<tc-string>\" , \"changed_at\" : \"<timestamp>\" } ] } ] }","title":"Complete Privacy Status"},{"location":"cmp/export/#response-behavior_1","text":"status code meaning 200 OK Call successful 400 BAD REQUEST Missing parameter changed_since 401 UNAUTHORIZED No (valid )authentication provided 403 FORBIDDEN Missing parameters ( cmp_id ), ( tapp_id ) - requesting TAPP isn't active","title":"Response behavior"},{"location":"cmp/server-based/","text":"Server-based API (backend integration) \u00b6 Description of the backend integration of the netID Permission Center by the CMP (integration from the server side / backend of the CMP if available). A netID Partner (TAPP) that sends a user through the Single Sign-On Flow can requests an access token ( token ) provided after the successful login, based on which a user can be authenticated at the netID Permission Center to enable read/write access for that specific users privacy status. The server-based requests are secured via the access token. Calls of this type are blocked from the browser environments for security reasons (no Origin header is allowed!) Read APIs \u00b6 netID Identifier \u00b6 A CMP/netID Partner can retrieve the user's netID Identifier via the following interface: Query GET https://einwilligungsspeicher.netid.de/identification/tpid? token = <TOKEN> Accept: application/vnd.netid.identification.tpid-read-v1+json Response 200 OK Content-Type: application/vnd.netid.identification.tpid-read-v1+json { \"tpid\" : \"<TPID>|null\" \"status\" : \"OK|NO_TOKEN|TOKEN_ERROR|CONSENT_REQUIRED\" } Response properties tpid - Users netID Identifier. Only returned if consent \"identification\" is given, the tpid is known (i.e. user is already authenticated on the device) and status \"OK\". Otherwise null. status meaning tpid OK Call successful - In case the consent for passing the TPID is missing (\"identification\") null is returned, otherwise the tpid x (-) NO_TOKEN No access token was passed. - TOKEN_ERROR Access token is expired or invalid. - CONSENT_REQUIRED Consent for passing the tpid (\"identification\") was revoked or declined by the user - Response behavior status code meaning 200 OK tpid of the netID user returned 400 BAD REQUEST missing access token, or access token expired / invalid 403 FORBIDDEN requesting TAPP isn't active or consent for 'identification' isn't granted 404 NOT FOUND tpid in access token does not exist 410 GONE tpid in access token isn't active Read privacy status \u00b6 Query GET https://einwilligungsspeicher.netid.de/permissions/iab-permissions? token = <TOKEN> Accept: application/vnd.netid.permissions.iab-permission-read-v1+json Response 200 OK Content-Type: application/vnd.netid.permissions.iab-permission-read-v1+json { \"tpid\" : \"<TPID>|null\" , \"tc\" : \"<TC string>|null\" , \"status\" : \"OK|NO_TOKEN|TOKEN_ERROR|CONSENT_REQUIRED\" } Response properties item description tpid Users netID Identifier. Only returned if consent \"identification\" is given, the tpid is known (i.e. user is already authenticated on the device) and status \"OK\". Otherwise null tc The TC string stored for this tpid for this respective netID Partner (TAPP). Only with status \"OK\". Otherwise null status meaning tc tpid OK Call successful - tc information (if present) is returned. In case the consent for passing the tpid is missing (\"identification\") null is returned, otherwise the tpid x (-) x (-) NO_TPID No access token was passed. - - TOKEN_ERROR Access token is expired or invalid. - - CONSENT_REQUIRED Consent for passing the tpid (\"identification\") was revoked or declined by the user x - Response behavior status code meaning 201 OK Call successful 400 BAD REQUEST missing access token, or access token is expired / invalid 403 FORBIDDEN requesting TAPP isn't active 404 NOT FOUND tpid in access token is not active or TC String is not available 410 GONE tpid in access token isn't active Write APIs \u00b6 Write privacy status \u00b6 Query POST https://einwilligen.netid.de/permissions/iab-permissions? token = <TOKEN> Content-Type: application/vnd.netid.permissions.iab-permission-write-v1+json { \"identification\" : \"true|false\" , \"tc\" : \"<TC string>\" } Response 201 CREATED { \"tpid\" : \"<TPID>|null\" , \"status\" : \"OK|NO_TOKEN|TOKEN_ERROR\" } Remarks If consent for \"identification\" has been given by the user, this must be signaled by passing \"identification: true\". For the avoidance of doubt, this of course requires the prior collection of this consent by the CMP. If only the TC string is to be updated and the consent for \"identification\" already exists, only the \"tc\" attribute can be passed. Both can also be written at the same time. In case of revocation the consent for \"identification\", only \"identification: false\" is passed. Request properties item description identification Boolean flag, indicating the status of the permission \"Identification\". true = consent is given false = consent is not given or revoked tc TC String which should be stored for this user in relation to the netID Partner (TCF 2.0) Response properties tpid - Users netID Identifier. Only present if consent \"Identification\" is given, the tpid is known and status is \"OK\". Otherwise null. status meaning OK TC String/consent for \"identification\" was stored. NO_TOKEN No access token was transferred. TOKEN_ERROR Access token is expired or invalid. Response behavior status code meaning 201 CREATED - tpid of the netID user is returned, if consent for \"identification\" is granted - TC String is returned 400 BAD REQUEST missing access token, or access token expired / invalid 403 FORBIDDEN requesting TAPP isn't active 410 GONE tpid in access token isn't active","title":"Server-based API"},{"location":"cmp/server-based/#server-based-api-backend-integration","text":"Description of the backend integration of the netID Permission Center by the CMP (integration from the server side / backend of the CMP if available). A netID Partner (TAPP) that sends a user through the Single Sign-On Flow can requests an access token ( token ) provided after the successful login, based on which a user can be authenticated at the netID Permission Center to enable read/write access for that specific users privacy status. The server-based requests are secured via the access token. Calls of this type are blocked from the browser environments for security reasons (no Origin header is allowed!)","title":"Server-based API (backend integration)"},{"location":"cmp/server-based/#read-apis","text":"","title":"Read APIs"},{"location":"cmp/server-based/#netid-identifier","text":"A CMP/netID Partner can retrieve the user's netID Identifier via the following interface: Query GET https://einwilligungsspeicher.netid.de/identification/tpid? token = <TOKEN> Accept: application/vnd.netid.identification.tpid-read-v1+json Response 200 OK Content-Type: application/vnd.netid.identification.tpid-read-v1+json { \"tpid\" : \"<TPID>|null\" \"status\" : \"OK|NO_TOKEN|TOKEN_ERROR|CONSENT_REQUIRED\" }","title":"netID Identifier"},{"location":"cmp/server-based/#read-privacy-status","text":"Query GET https://einwilligungsspeicher.netid.de/permissions/iab-permissions? token = <TOKEN> Accept: application/vnd.netid.permissions.iab-permission-read-v1+json Response 200 OK Content-Type: application/vnd.netid.permissions.iab-permission-read-v1+json { \"tpid\" : \"<TPID>|null\" , \"tc\" : \"<TC string>|null\" , \"status\" : \"OK|NO_TOKEN|TOKEN_ERROR|CONSENT_REQUIRED\" }","title":"Read privacy status"},{"location":"cmp/server-based/#write-apis","text":"","title":"Write APIs"},{"location":"cmp/server-based/#write-privacy-status","text":"Query POST https://einwilligen.netid.de/permissions/iab-permissions? token = <TOKEN> Content-Type: application/vnd.netid.permissions.iab-permission-write-v1+json { \"identification\" : \"true|false\" , \"tc\" : \"<TC string>\" } Response 201 CREATED { \"tpid\" : \"<TPID>|null\" , \"status\" : \"OK|NO_TOKEN|TOKEN_ERROR\" } Remarks If consent for \"identification\" has been given by the user, this must be signaled by passing \"identification: true\". For the avoidance of doubt, this of course requires the prior collection of this consent by the CMP. If only the TC string is to be updated and the consent for \"identification\" already exists, only the \"tc\" attribute can be passed. Both can also be written at the same time. In case of revocation the consent for \"identification\", only \"identification: false\" is passed.","title":"Write privacy status"},{"location":"devportal/","text":"Getting Started \u00b6 The netID Developer Portal is the main resource for developers/digital services that want to leverage netID with their online services. It provides all the necessary resources and features to integrate the netID Single Sign-on. In the future, individual reports, information about planned further developments of the netID and much more will be available in the Developer Portal. In order to use these capabilities, you need to register here . The following steps will guide you through the process. Register \u00b6 To create an account for the netID Developer Portal, click on Create developer account . You will be forwarded to the registration page of the netID Developer Portal. Setting up an account is a three step process: Account Details - Specify your e-mail address and a strong password Company Details - Specify company details needed for the netID Single-on (Company operating the services integration the Single Sign-on) Activate Account Account Details \u00b6 Fill out the requested details and continue by clicking Next A strong password does not need to be changed regularly. However, it should consist of at least 8 characters, better 12 or more. The longer your password, the harder it is to crack. Also mix letters, numbers and special characters and switch between upper and lower case. Company Details \u00b6 Creating a new account also requires you to create an associate company profile, which is the legal entity that operates the services that you are integrating the Single Sign-on into. Fill out the necessary details, read the terms of use and accept the user contract. To complete the registration, click on Complete registration . Accepting the user contract requires you to be eligible to act on behalf of your company (as registered in this step). The developer portal supports different roles to address that, namely Developer and Representative . After finishing the signup process the registered user has the role Representative For details on roles/user-management see User Management Activate Account \u00b6 Once the registration has been completed an activation code will be send to the provided e-mail address. If you did not receive an e-mail from us during registration, please contact our support address: support@developer.netid.de To active your account enter the activation code into the form and click Complete activation . Initial Login \u00b6 Once you have registered and activated your account you can sign-in with your chosen credentials. Troubleshooting Login \u00b6 In case you have issues with you login, click Problems logging in? The Developer Portal offers you to: Reset your password, by clicking Password reset Resend an activation code, in case you had problems during the registration process. Click Send activation code In any other case, you can also contact support via e-mail or phone.","title":"Getting started"},{"location":"devportal/#getting-started","text":"The netID Developer Portal is the main resource for developers/digital services that want to leverage netID with their online services. It provides all the necessary resources and features to integrate the netID Single Sign-on. In the future, individual reports, information about planned further developments of the netID and much more will be available in the Developer Portal. In order to use these capabilities, you need to register here . The following steps will guide you through the process.","title":"Getting Started"},{"location":"devportal/#register","text":"To create an account for the netID Developer Portal, click on Create developer account . You will be forwarded to the registration page of the netID Developer Portal. Setting up an account is a three step process: Account Details - Specify your e-mail address and a strong password Company Details - Specify company details needed for the netID Single-on (Company operating the services integration the Single Sign-on) Activate Account","title":"Register"},{"location":"devportal/#account-details","text":"Fill out the requested details and continue by clicking Next A strong password does not need to be changed regularly. However, it should consist of at least 8 characters, better 12 or more. The longer your password, the harder it is to crack. Also mix letters, numbers and special characters and switch between upper and lower case.","title":"Account Details"},{"location":"devportal/#company-details","text":"Creating a new account also requires you to create an associate company profile, which is the legal entity that operates the services that you are integrating the Single Sign-on into. Fill out the necessary details, read the terms of use and accept the user contract. To complete the registration, click on Complete registration . Accepting the user contract requires you to be eligible to act on behalf of your company (as registered in this step). The developer portal supports different roles to address that, namely Developer and Representative . After finishing the signup process the registered user has the role Representative For details on roles/user-management see User Management","title":"Company Details"},{"location":"devportal/#activate-account","text":"Once the registration has been completed an activation code will be send to the provided e-mail address. If you did not receive an e-mail from us during registration, please contact our support address: support@developer.netid.de To active your account enter the activation code into the form and click Complete activation .","title":"Activate Account"},{"location":"devportal/#initial-login","text":"Once you have registered and activated your account you can sign-in with your chosen credentials.","title":"Initial Login"},{"location":"devportal/#troubleshooting-login","text":"In case you have issues with you login, click Problems logging in? The Developer Portal offers you to: Reset your password, by clicking Password reset Resend an activation code, in case you had problems during the registration process. Click Send activation code In any other case, you can also contact support via e-mail or phone.","title":"Troubleshooting Login"},{"location":"devportal/reporting/","text":"Reports \u00b6 Overview \u00b6 The netID Developer Portal provides KPIs in individual reports as .cvs files for you to download. Here you can find an overview of the reports provided by the netID Developer Portal. General Information \u00b6 Reporting interval : daily Aggregates : Rolling time windows, aggregated to 1 day, 7 days, 30 days Reporting period : A report contains a maximum of 366 days Reports are calculated for the partner and each of his existing Relying Party. Each Relying Party will have its figures and the figures of its partner displayed as a sum. Reports in the netID Developer Portal \u00b6 Report Description Screen / process reference Broker Screen ([Date]_BrokerDialog_*.csv) The report shows how often the netID login flow was started, triggered by a click on the netID login button on the Relying Party page netID UI Flow Step1: \"Enter email address\". Broker \"new netID User\" Screen ([Date]_BrokerNeuerNutzerDialog_*.csv) The report shows the number of entered e-mail addresses that are not yet netID-enabled. These addresses were entered in the Broker dialog by the netID user. netID UI Flow Step1_redirect: \"unknown user\" page. Broker Process ([Date]_BrokerProcess_*.csv) The report shows the number of e-mail addresses entered in the first screen of the netID flow. A distinction is made between successful and unsuccessful attempts. The attempt is successful if the entered email address is known in the netID login context and unsuccessful if the email address is incorrect or could not be assigned. Note: Only events triggered via the broker screen are counted. - Broker master data transfer ([Date]_BrokerStammdatenuebertragung_*.csv) The report provides information on the number of master data transmitted by the netID account provider to the Relying Party. It shows required and optional master data as a total. - Authentication Screen ([Date]_AuthentifizierungDialog_*.csv) This report shows how many netID users wanted to sign-in with netID and successfully entered their e-mail address on the broker page. On this screen, the user is prompted to enter the password. netID UI Flow Step2: Account Provider \"enter password page\" Authentication Process ([Date]_AuthentifizierungProzess_*.csv) The report provides information on how many netID users have completed the authentication process by entering a password. The report shows both successful and unsuccessful authentications. - Authorization Screen ([Date]_AutorisierungsDialog_*.csv) The report informs how often the consent page was displayed. The page is displayed when the netID user logs in to the Relying Party for the first time, the Relying Party requires new/different master data of the netID user or the Relying Party explicitly requests the consent page. Note: Unique users are also shown. netID UI Flow Step3: Account Provider \"Consent Page\" Authorization Process ([Date]_AutorisierungsProzess_*.csv) The report shows how often mandatory and voluntary (as a total) or only voluntary master data were transferred after confirmation on the Consent page. Note: Unique users are also shown. - Authorization Process Core Data ([Date]_AutorisierungProzessCoreData_*.csv) The report provides information on which master data (claim) was authorised via the consent page. For each master data item, the total number of approvals is reported. Mandatory and voluntary consents are shown as a total. Note: This report only contains daily aggregates . - Registration Neutral Instance Screen ([Date]_RegistrierungNeutraleInstanzDialog_*.csv) The report shows how many netID account registration attempts were initiated by the user. netID UI Flow Step1_b: Account Provider \"registration page\" for unknown users. Registration Neutral Instance Process ([Date]_RegistrierungNeutraleInstanzProzess_*.csv) The report shows the number of successful and unsuccessful registrations. - SSO active user ([Date]_SSOAktiveUser_*.csv) The report provides information on the number of active users for the specified period, separated by partner and its Relying Party. A user activity is defined by a successful login. - SSO user ([Date]_SSOUser_*.csv) The report provides information on the changes in the number of SSO users. - SSO user first use ([Date]_SSOUserErstnutzung_*.csv) The report evaluates the number of first use of netID separately by partner (total) and its reeling party. - Download Reports \u00b6 The netID Developer Portal provides individual reports as .cvs files for download. To download a report, click on Reports in the navigation on the left. An overview of all available reports is displayed. Click on download to the right of the report you wish to download. A notification appears asking you whether you want to open or save the report. Select whether you want to open or save the report by clicking on Open or Save/Save As. The desired report is downloaded.","title":"KPI Reports"},{"location":"devportal/reporting/#reports","text":"","title":"Reports"},{"location":"devportal/reporting/#overview","text":"The netID Developer Portal provides KPIs in individual reports as .cvs files for you to download. Here you can find an overview of the reports provided by the netID Developer Portal.","title":"Overview"},{"location":"devportal/reporting/#general-information","text":"Reporting interval : daily Aggregates : Rolling time windows, aggregated to 1 day, 7 days, 30 days Reporting period : A report contains a maximum of 366 days Reports are calculated for the partner and each of his existing Relying Party. Each Relying Party will have its figures and the figures of its partner displayed as a sum.","title":"General Information"},{"location":"devportal/reporting/#reports-in-the-netid-developer-portal","text":"Report Description Screen / process reference Broker Screen ([Date]_BrokerDialog_*.csv) The report shows how often the netID login flow was started, triggered by a click on the netID login button on the Relying Party page netID UI Flow Step1: \"Enter email address\". Broker \"new netID User\" Screen ([Date]_BrokerNeuerNutzerDialog_*.csv) The report shows the number of entered e-mail addresses that are not yet netID-enabled. These addresses were entered in the Broker dialog by the netID user. netID UI Flow Step1_redirect: \"unknown user\" page. Broker Process ([Date]_BrokerProcess_*.csv) The report shows the number of e-mail addresses entered in the first screen of the netID flow. A distinction is made between successful and unsuccessful attempts. The attempt is successful if the entered email address is known in the netID login context and unsuccessful if the email address is incorrect or could not be assigned. Note: Only events triggered via the broker screen are counted. - Broker master data transfer ([Date]_BrokerStammdatenuebertragung_*.csv) The report provides information on the number of master data transmitted by the netID account provider to the Relying Party. It shows required and optional master data as a total. - Authentication Screen ([Date]_AuthentifizierungDialog_*.csv) This report shows how many netID users wanted to sign-in with netID and successfully entered their e-mail address on the broker page. On this screen, the user is prompted to enter the password. netID UI Flow Step2: Account Provider \"enter password page\" Authentication Process ([Date]_AuthentifizierungProzess_*.csv) The report provides information on how many netID users have completed the authentication process by entering a password. The report shows both successful and unsuccessful authentications. - Authorization Screen ([Date]_AutorisierungsDialog_*.csv) The report informs how often the consent page was displayed. The page is displayed when the netID user logs in to the Relying Party for the first time, the Relying Party requires new/different master data of the netID user or the Relying Party explicitly requests the consent page. Note: Unique users are also shown. netID UI Flow Step3: Account Provider \"Consent Page\" Authorization Process ([Date]_AutorisierungsProzess_*.csv) The report shows how often mandatory and voluntary (as a total) or only voluntary master data were transferred after confirmation on the Consent page. Note: Unique users are also shown. - Authorization Process Core Data ([Date]_AutorisierungProzessCoreData_*.csv) The report provides information on which master data (claim) was authorised via the consent page. For each master data item, the total number of approvals is reported. Mandatory and voluntary consents are shown as a total. Note: This report only contains daily aggregates . - Registration Neutral Instance Screen ([Date]_RegistrierungNeutraleInstanzDialog_*.csv) The report shows how many netID account registration attempts were initiated by the user. netID UI Flow Step1_b: Account Provider \"registration page\" for unknown users. Registration Neutral Instance Process ([Date]_RegistrierungNeutraleInstanzProzess_*.csv) The report shows the number of successful and unsuccessful registrations. - SSO active user ([Date]_SSOAktiveUser_*.csv) The report provides information on the number of active users for the specified period, separated by partner and its Relying Party. A user activity is defined by a successful login. - SSO user ([Date]_SSOUser_*.csv) The report provides information on the changes in the number of SSO users. - SSO user first use ([Date]_SSOUserErstnutzung_*.csv) The report evaluates the number of first use of netID separately by partner (total) and its reeling party. -","title":"Reports in the netID Developer Portal"},{"location":"devportal/reporting/#download-reports","text":"The netID Developer Portal provides individual reports as .cvs files for download. To download a report, click on Reports in the navigation on the left. An overview of all available reports is displayed. Click on download to the right of the report you wish to download. A notification appears asking you whether you want to open or save the report. Select whether you want to open or save the report by clicking on Open or Save/Save As. The desired report is downloaded.","title":"Download Reports"},{"location":"devportal/tutorial/clients/","text":"Clients \u00b6 Using clients you can manage the technical details for an integration into your services. Services may have multiple clients to cater for different types of integration (mobile, website, ...). Lifecycle \u00b6 Clients have a simple lifecycle, once they are created they immediately get into the active state and can be used. At any point in time you can choose to Delete a specific client, which puts it into the state deleted . Clients remain in the state deleted for 14 days, once these are passed it will be permanently removed. Within the 14 days grace period clients can be re-activated and return to into the active state. De-active a specific client which puts into inactive status (disabling its usage). It can be re-activated and returns to into the active state. Status changes on the overall service this client belongs to will also have immediate effect on all of its clients. Detailed Functionality \u00b6 Creating a Client \u00b6 To create a client for a service, select Add client in the details view of the service. Client Details can be defined in the provided form. Fill out the necessary details, most importantly in case this client is meant for production use make sure that the Callback URL points to the same backend that operates this specific service. While this is not technically enforced, the callback URL must be operated by your company. Please note that netID uses pairwise subject identifiers , which are derived respective to the clients callback url (more specifically the hostname portion) set here. If you're using multiple clients for a service, you may want to use callback urls with identical host portion to avoid receiving different sub values for the same user. Once the client is created you can retrieve the necessary credentials to integrate into your environment by expanding the client details, namely Client ID and Client Secret . Depending on the status of the clients service w.r.t. approval for production use the Client Secret will be shown as Client secret - sandbox : which indicates that the service is still in sandboxed mode Client secret - live : which indicates that the service has been approved to be used in a production environment Client secret after service approval Please note that the Client Secret does not change when the service is approved for production use, that means you do not need to change the configuration of your client / take action after the approval. Edit a Client \u00b6 To edit a client select Edit in the Clients listing of the details view of the respective service for this client. Client details can be edited in the provided form. Make the desired changes and updates and save the information by confirmation using Update Client . Deactivate a Client \u00b6 To temporarily deactivate a client select Edit in the Clients listing of the details view of the respective service for this client. In the client details form select the Inactive in the drop down menu under Status . Reactivate a Client \u00b6 To reactivate a client select Edit in the Clients listing in the details view of the respective service for this client. In the client details form select the Active in the drop down menu under Status . Delete a Client \u00b6 To delete a client permanently expand the client details in the Clients listing of the details view of the respective service for this client. Click on Delete client at the bottom of the expanded details and confirm the deletion. See notes on lifecycle","title":"Clients"},{"location":"devportal/tutorial/clients/#clients","text":"Using clients you can manage the technical details for an integration into your services. Services may have multiple clients to cater for different types of integration (mobile, website, ...).","title":"Clients"},{"location":"devportal/tutorial/clients/#lifecycle","text":"Clients have a simple lifecycle, once they are created they immediately get into the active state and can be used. At any point in time you can choose to Delete a specific client, which puts it into the state deleted . Clients remain in the state deleted for 14 days, once these are passed it will be permanently removed. Within the 14 days grace period clients can be re-activated and return to into the active state. De-active a specific client which puts into inactive status (disabling its usage). It can be re-activated and returns to into the active state. Status changes on the overall service this client belongs to will also have immediate effect on all of its clients.","title":"Lifecycle"},{"location":"devportal/tutorial/clients/#detailed-functionality","text":"","title":"Detailed Functionality"},{"location":"devportal/tutorial/clients/#creating-a-client","text":"To create a client for a service, select Add client in the details view of the service. Client Details can be defined in the provided form. Fill out the necessary details, most importantly in case this client is meant for production use make sure that the Callback URL points to the same backend that operates this specific service. While this is not technically enforced, the callback URL must be operated by your company. Please note that netID uses pairwise subject identifiers , which are derived respective to the clients callback url (more specifically the hostname portion) set here. If you're using multiple clients for a service, you may want to use callback urls with identical host portion to avoid receiving different sub values for the same user. Once the client is created you can retrieve the necessary credentials to integrate into your environment by expanding the client details, namely Client ID and Client Secret . Depending on the status of the clients service w.r.t. approval for production use the Client Secret will be shown as Client secret - sandbox : which indicates that the service is still in sandboxed mode Client secret - live : which indicates that the service has been approved to be used in a production environment Client secret after service approval Please note that the Client Secret does not change when the service is approved for production use, that means you do not need to change the configuration of your client / take action after the approval.","title":"Creating a Client"},{"location":"devportal/tutorial/clients/#edit-a-client","text":"To edit a client select Edit in the Clients listing of the details view of the respective service for this client. Client details can be edited in the provided form. Make the desired changes and updates and save the information by confirmation using Update Client .","title":"Edit a Client"},{"location":"devportal/tutorial/clients/#deactivate-a-client","text":"To temporarily deactivate a client select Edit in the Clients listing of the details view of the respective service for this client. In the client details form select the Inactive in the drop down menu under Status .","title":"Deactivate a Client"},{"location":"devportal/tutorial/clients/#reactivate-a-client","text":"To reactivate a client select Edit in the Clients listing in the details view of the respective service for this client. In the client details form select the Active in the drop down menu under Status .","title":"Reactivate a Client"},{"location":"devportal/tutorial/clients/#delete-a-client","text":"To delete a client permanently expand the client details in the Clients listing of the details view of the respective service for this client. Click on Delete client at the bottom of the expanded details and confirm the deletion. See notes on lifecycle","title":"Delete a Client"},{"location":"devportal/tutorial/services/","text":"Services \u00b6 Services allow you to manage all the necessary technical and non-technical details to integrate the netID Sign Sign-on into one of your offerings. Registered companies can have multiple services , each service can have multiple clients . At service level you manage mainly non-technical details (branding, data privacy and usage terms), whereas technical details are managed at the individual client level. Lifecycle \u00b6 Services have a simple lifecycle, once they are created they immediately get into the active state and can be used. At any point in time you can choose to delete a specific service, which puts the service and all of its clients into the state deleted . Services remain in the state deleted for 14 days, once these are passed it will be permanently removed. Within the 14 days grace period services can be re-activated and return to into the active state. Sandboxed Mode \u00b6 Besides the general status as described above, services run by default (meaning after they are created) in a sandboxed mode which means they are not yet used/approved for production use. In sandboxed mode, a service and its respective clients are fully functional, but can only be used with explicitly whitelisted test users Detailed Functionality \u00b6 Create a Service \u00b6 Select Services in the menu, click Add service and fill in the required details in the following screen. Service domain is the domain of your customer facing website. Also, links to data privacy information ( URL privacy policy ) and terms of usage ( URL terms of usage ) should be supplied. As a best practice use separate services for development and production environments. Note: for testing purposes, you can actually enter any domain and URL values into this form, as they are not technically relevant in order to get a initial testing integration running. The details provided here will be used within the netID User Interfaces (Single Sign-on, Privacy Center). If you are deploying into a production environment make sure that to provide accurate information. These values will also be inspected before a service is allowed to be used without sandboxed mode. To save your service, click on Add service . The next step to start the integration of netID for that service is to create a client for it. For details see client tutorial Service Details View To manage the details of services and their respective clients you need to navigate to the services details view by selecting Services in the navigation on the left, which will show you the list of all services, and by clicking on Details on the right hand of the service name. Manage Test Users \u00b6 To manage users that can be used with sandboxed services (see Sandboxed Mode ), you can managed the whitelist of users for a specific service in the details view under Test user Simply add users with Add test user or remove them with Delete Approval for production use \u00b6 Once you've run thought the technical integration, you can request your service to be approved for usage in a production environment (without limitation to test users). To start the process open the details view of the service you want to activate and click on Request service release . The service will be reviewed by the EnID and approved for production usage (not limited to test users) Edit a Service \u00b6 To alter an already existing service navigate to the service details view and click Edit next to the name of the service. In order to change details of a service you will be prompted to re-enter you password. Make the desired changes and updates and save the changes with a click on Update Service . Delete a Service \u00b6 To delete an already existing service, navigate to the service details view details view Select Show more details . Click Delete Service . To permanently delete the service, confirm the process by re-entering your password. The service will remain listed for the next 14 days with a status DELETED . Within that timeframe you can recover a deleted service before it is permanently deleted and removed from your service overview. Reactivate a service Reactivate a Service \u00b6 To re-active an already deleted service, navigate to the service details view details view for that service. Click Show more details . Click Reactivate Service . To confirm the reactivation, confirm the process by re-entering your password. Once done the service will appear with an Active status.","title":"Services"},{"location":"devportal/tutorial/services/#services","text":"Services allow you to manage all the necessary technical and non-technical details to integrate the netID Sign Sign-on into one of your offerings. Registered companies can have multiple services , each service can have multiple clients . At service level you manage mainly non-technical details (branding, data privacy and usage terms), whereas technical details are managed at the individual client level.","title":"Services"},{"location":"devportal/tutorial/services/#lifecycle","text":"Services have a simple lifecycle, once they are created they immediately get into the active state and can be used. At any point in time you can choose to delete a specific service, which puts the service and all of its clients into the state deleted . Services remain in the state deleted for 14 days, once these are passed it will be permanently removed. Within the 14 days grace period services can be re-activated and return to into the active state.","title":"Lifecycle"},{"location":"devportal/tutorial/services/#sandboxed-mode","text":"Besides the general status as described above, services run by default (meaning after they are created) in a sandboxed mode which means they are not yet used/approved for production use. In sandboxed mode, a service and its respective clients are fully functional, but can only be used with explicitly whitelisted test users","title":"Sandboxed Mode"},{"location":"devportal/tutorial/services/#detailed-functionality","text":"","title":"Detailed Functionality"},{"location":"devportal/tutorial/services/#create-a-service","text":"Select Services in the menu, click Add service and fill in the required details in the following screen. Service domain is the domain of your customer facing website. Also, links to data privacy information ( URL privacy policy ) and terms of usage ( URL terms of usage ) should be supplied. As a best practice use separate services for development and production environments. Note: for testing purposes, you can actually enter any domain and URL values into this form, as they are not technically relevant in order to get a initial testing integration running. The details provided here will be used within the netID User Interfaces (Single Sign-on, Privacy Center). If you are deploying into a production environment make sure that to provide accurate information. These values will also be inspected before a service is allowed to be used without sandboxed mode. To save your service, click on Add service . The next step to start the integration of netID for that service is to create a client for it. For details see client tutorial","title":"Create a Service"},{"location":"devportal/tutorial/services/#manage-test-users","text":"To manage users that can be used with sandboxed services (see Sandboxed Mode ), you can managed the whitelist of users for a specific service in the details view under Test user Simply add users with Add test user or remove them with Delete","title":"Manage Test Users"},{"location":"devportal/tutorial/services/#approval-for-production-use","text":"Once you've run thought the technical integration, you can request your service to be approved for usage in a production environment (without limitation to test users). To start the process open the details view of the service you want to activate and click on Request service release . The service will be reviewed by the EnID and approved for production usage (not limited to test users)","title":"Approval for production use"},{"location":"devportal/tutorial/services/#edit-a-service","text":"To alter an already existing service navigate to the service details view and click Edit next to the name of the service. In order to change details of a service you will be prompted to re-enter you password. Make the desired changes and updates and save the changes with a click on Update Service .","title":"Edit a Service"},{"location":"devportal/tutorial/services/#delete-a-service","text":"To delete an already existing service, navigate to the service details view details view Select Show more details . Click Delete Service . To permanently delete the service, confirm the process by re-entering your password. The service will remain listed for the next 14 days with a status DELETED . Within that timeframe you can recover a deleted service before it is permanently deleted and removed from your service overview. Reactivate a service","title":"Delete a Service"},{"location":"devportal/tutorial/services/#reactivate-a-service","text":"To re-active an already deleted service, navigate to the service details view details view for that service. Click Show more details . Click Reactivate Service . To confirm the reactivation, confirm the process by re-entering your password. Once done the service will appear with an Active status.","title":"Reactivate a Service"},{"location":"devportal/tutorial/users/","text":"User Management \u00b6 The netID Developer Portal supports different roles with different levels of access, namely Developer and Representative. Creating a new developer portal account from scratch (and thus a new managed company profile) will assign you the role Representative. Roles can be changed and users can be invited to participate in the management of a company profile. For details on roles see roles/rights . Detailed Functionality \u00b6 In order to access the user management functionality, navigate to User Management view by clicking on it in the left hand menu. This view lists all the active users and exposes the below described functionality. Change personal data \u00b6 Click on Details for the respective user in the User Management View. Make the desired changes and then confirm your entries by clicking on Apply changes . Invite a new user \u00b6 To add relevant team members to your company profile, users with the role representative can invite new users. Click on Invite User in the User Management view. Add the necessary details for the new user (name, email address, ...) and the role he will be assigned to once added. Choose the role carefully, see roles/rights for details. To start the invitation process click on Send invitation , the invited user will receive an email with the necessary details. Changing the role of a user \u00b6 Representatives can change the role of users at any point in time, by clicking Details for the respective user in the User Management View. Simply select a new role in the details dialog and confirm with Accept changes . Choose the role carefully: Representatives have full administrative access, Developers can only manage the necessary technical details for clients, see roles/rights for details. At least one user must have the role Representative. Conflicting changes will be rejected. Delete user \u00b6 Representatives can remove users at any point in time, by clicking Details for the respective user in the User Management View and clicking Delete user account . At least one user must have the role Representative. Conflicting changes will be rejected. Company Profile Main Contact \u00b6 To manage/adjust you general main company contact select Company Profile in the navigation on the left. Adjust the details under Contact details and click on Apply Changes . Roles/Rights \u00b6 The following table show the rights per role: Function Representative Developer View Service X X Create Service X Edit Service X Delete Service X View Client X X Create Client X Edit Client X X Delete Client X Manage Test Users X X View Users X himself only Invite Users X Edit Users own details + all roles own details Delete Users X View Company Profile X X Edit Company Profile X","title":"User Management"},{"location":"devportal/tutorial/users/#user-management","text":"The netID Developer Portal supports different roles with different levels of access, namely Developer and Representative. Creating a new developer portal account from scratch (and thus a new managed company profile) will assign you the role Representative. Roles can be changed and users can be invited to participate in the management of a company profile. For details on roles see roles/rights .","title":"User Management"},{"location":"devportal/tutorial/users/#detailed-functionality","text":"In order to access the user management functionality, navigate to User Management view by clicking on it in the left hand menu. This view lists all the active users and exposes the below described functionality.","title":"Detailed Functionality"},{"location":"devportal/tutorial/users/#change-personal-data","text":"Click on Details for the respective user in the User Management View. Make the desired changes and then confirm your entries by clicking on Apply changes .","title":"Change personal data"},{"location":"devportal/tutorial/users/#invite-a-new-user","text":"To add relevant team members to your company profile, users with the role representative can invite new users. Click on Invite User in the User Management view. Add the necessary details for the new user (name, email address, ...) and the role he will be assigned to once added. Choose the role carefully, see roles/rights for details. To start the invitation process click on Send invitation , the invited user will receive an email with the necessary details.","title":"Invite a new user"},{"location":"devportal/tutorial/users/#changing-the-role-of-a-user","text":"Representatives can change the role of users at any point in time, by clicking Details for the respective user in the User Management View. Simply select a new role in the details dialog and confirm with Accept changes . Choose the role carefully: Representatives have full administrative access, Developers can only manage the necessary technical details for clients, see roles/rights for details. At least one user must have the role Representative. Conflicting changes will be rejected.","title":"Changing the role of a user"},{"location":"devportal/tutorial/users/#delete-user","text":"Representatives can remove users at any point in time, by clicking Details for the respective user in the User Management View and clicking Delete user account . At least one user must have the role Representative. Conflicting changes will be rejected.","title":"Delete user"},{"location":"devportal/tutorial/users/#company-profile-main-contact","text":"To manage/adjust you general main company contact select Company Profile in the navigation on the left. Adjust the details under Contact details and click on Apply Changes .","title":"Company Profile Main Contact"},{"location":"devportal/tutorial/users/#rolesrights","text":"The following table show the rights per role: Function Representative Developer View Service X X Create Service X Edit Service X Delete Service X View Client X X Create Client X Edit Client X X Delete Client X Manage Test Users X X View Users X himself only Invite Users X Edit Users own details + all roles own details Delete Users X View Company Profile X X Edit Company Profile X","title":"Roles/Rights"},{"location":"sso/","text":"Single Sign-on Documentation \u00b6 This documentation describes the federated Single Sign-on \"netID\", which allows digital services (netID Partners) to register and login netID Users based on their account at so called netID Account Providers. In order to acquire the necessary credentials to leverage this service please refer to the Developer Portal Documentation Integration Guide \u00b6 General Overview \u00b6 The netID Single Sign-on implements the OpenID Connect standard as per the OpenID Connect Core 1.0 specification using the Authorization Code Flow. Partners manage their details as well as service/clients settings in the netID Developer Portal. They can register/manage services and associated clients for these services (Website, App, Mobile, ...). Data transfer authorizations are managed service/client specific. All the clients' communication takes place via EnID's central SSO broker. The SSO broker routes requests to the participating Account Providers, end users always authenticate to the Account Provider that manages their specific account, which is also where they authorize data transfer to a partners' service. Clients specify during authentication calls which master data they request to be authorized by a user for transfer; if the user agrees, the client receives an id_token and a userinfo object as a JSON structure. id_token and userinfo objects also contain the end user's subject identifier ( sub ). netID uses Pairwise Subject Identifiers to derive client specific subject identifiers during authentication requests. The subject identifier is derived using the host portion of the redirect_uri (Callback URL), to ensure that the sub value is the same for all clients of a service make sure that the redirect_uri points to the same host across all clients of a service. Claims and Scopes \u00b6 Each time a partner initiates a login flow by calling the authorization endpoint he can define which master data the user should authorize to be transferred. For that purpose, the OpenID Connect/OAuth2 standard defines scope and claim mechanisms. Every OpenID Connect request must always request the openid scope. Moreover, the master data required/asked for by the partner can be expressed in the form of essential claims with netID. In addition to Single Sign-on netID allows users to manage their overall privacy settings in terms of commercial data use, which are managed via the netID Permission Center backend. The netID Broker may be used by eligible netID Partners to acquire an access token that allows access to the Permission Center on behalf of a user, details on this integration can be found here . Once the user authorizes the transfer of that master data (requested using claims), this authorization is stored and not being asked for again unless the users revokes the authorization using the netID Privacy Center. The following scopes are supported by netID: Scope Description openid mandatory scope to initiate a Single Sign-on using the authorize endpoint permission_management optional scope to request an access token to access the netID Permission Center The following claims are supported by netID: Claim Type Description Example sub String Subject - Identifier for the end user at the issuer (netID Account Provider) \"tLTGOmOHb5ix7i9d-hJ4CHXdh_hM2ZsCR2Iy7v7hs1M\" address JSON Object Physical mailing address, containing information (if available) about postal code (ZIP), city or town, steet address and country where the end user's address is located If available: \"street_address\": \"Hauptstr. 10\", \"country\": \"ISO 3166 - ALPHA2\", \"formatted\": \"Hauptstr. 10\\n10117 Berlin\\nDeutschland\", \"locality\": \"Berlin\", \"postal_code\": \"10117\" birthdate String The end user's date of birth \"yyyy-mm-dd\" \"1980-01-01\" email String The end user's email address \" jane.doe@example.org \" email_verified Boolean The verification status of the end user's email address true | false gender String The end user's gender \"female\" | \"male\" | (\"inter\" possible in the future) given_name String The end user's first name (or names) \"Jane\" family_name String The end user's last name \"Doe\" shipping_address JSON Object Shipping address, containing information (if available) about recipient name, steet address, postal code (ZIP), city or town and country If available: \"recipient\": \"Jane Doe\", \"street_address\": \"Hauptstr. 10\", \"country\": \"ISO 3166 - ALPHA2\", \"formatted\": \"Hauptstr. 10\\n10117 Berlin\\nDeutschland\", \"locality\": \"Berlin\", \"postal_code\": \"10117\" The availability of these claims may, however, vary depending on the end user's account provider; in such cases un-supported claims are ignored and the client needs to handle this accordingly. Important: please note! Claims that are not requested as essential are ignored. The same applies to OIDC scope based claims requests, which are by definition also voluntary. Example Endpoint Calls \u00b6 Authorize \u00b6 Requests to the authorize endpoint initiate the Single Sign-on process, clients identify themselves with their client_id and redirect_uri and specify which claims and scopes are to be requested. Some optional parameters are also supported . The netID Broker endpoint for authorize requests is https://broker.netid.de/authorize . All endpoints and supported OpenID Connect features are also available here: https://broker.netid.de/.well-known/openid-configuration Sample Calls are provided given both easy readable as well as in valid URL encoding. The encoding needs to be used for the redirect_uri as well: SSO without requesting any additional data Query https://broker.netid.de/authorize? response_type = code & client_id =[ clientID ] & redirect_uri =[ redirect_uri ] & scope = openid URL encoding https://broker.netid.de/authorize?response_type = code & client_id =[ clientID ] & redirect_uri =[ redirect_uri ] & scope = openid Profile scope expressed in essential claims Query https://broker.netid.de/authorize? response_type = code & client_id =[ clientID ] & redirect_uri =[ redirect_uri ] & scope = openid & claims ={ \"userinfo\" : { \"birthdate\" : { \"essential\" :true } , \"gender\" : { \"essential\" :true } , \"given_name\" : { \"essential\" :true } , \"family_name\" : { \"essential\" :true } } } URL encoding https://broker.netid.de/authorize?response_type = code & client_id =[ clientID ] & redirect_uri =[ redirect_uri ] & scope = openid & claims = %7B%22userinfo%22%3A%7B%22birthdate%22%3A%7B%22essential%22%3Atrue%7D%2C%22gender%22%3A%7B%22essential%22%3Atrue%7D%2C%22given_name%22%3A%7B%22essential%22%3Atrue%7D%2C%22family_name%22%3A%7B%22essential%22%3Atrue%7D%7D%7D Token Endpoint \u00b6 Token requests are carried out after the callback to the client in order to exchange the code (only valid for 30 seconds and to be used only once) provided for an access token (valid for 15 minutes) for the UserInfo Endpoint as well as the id token . It is absolutely necessary that the code used remains unmodified. With token requests, it's particularly important to ensure that the code provided is identical bit-by-bit to the one received in the callback to the redirect_uri. The netID endpoint for token requests is https://broker.netid.de/token . Clients are authenticated using client_id REQUIRED. The client identifier issued to the client during the registration process in the netID Developer Portal. client_secret REQUIRED. The client secret issued to the client during the registration process in the netID Developer Portal. The endpoint supports two authentication methods, namely client_secret_basic (basic authentication) and client_secret_post (credentials in the request body). When using basic authentication the endpoint supports both GET and POST based requests. POST https://broker.netid.de/token HTTP / 1.1 Content-Type : application/x-www-form-urlencoded Authorization : Basic *base64(client_id:client_secret)* code=[code]&redirect_uri=[redirect_uri]&grant_type=authorization_code Example request using curl: Example Request curl -v -u [ user:pass ] -X POST https://broker.netid.de/token -H 'content-type: application/x-www-form-urlencoded; charset=UTF-8' -d 'code=[code]&redirect_uri=[redirect_uri]&grant_type=authorization_code' Example Response { \"access_token\" : \"f3EcGc1l8mjw3gZ3....\" , \"id_token\" : \"eyJhbGciOiJub25lIn0....\" , \"token_type\" : \"Bearer\" , \"expires_in\" : 899 } Decoded ID Token { \"aud\" : \"f6316771-.....\" , \"sub\" : \"geuGIhNTX.....\" , \"auth_time\" : 1603726351 , \"iss\" : \"https://broker.netid.de/\" , \"exp\" : 1603727273 , \"iat\" : 1603726373 } As an alternative clients may use client_secret_post based authentication providing client_id and client_secret using a POST request as shown below: POST /token HTTP / 1.1 Host : broker.netid.de Content-Type : application/x-www-form-urlencoded code=[code]&redirect_uri=[redirect_uri]&grant_type=authorization_code&client_id=CLIENT_ID_GOES_HERE&client_secret=CLIENT_SECRET_GOES_HERE UserInfo Endpoint \u00b6 The access token is used to retrieve the requested claims from the UserInfo Endpoint. Claims are returned as a JSON object. The netID Broker endpoint for userinfo requests is https://broker.netid.de/userinfo . Example GET Request GET /userinfo HTTP / 1.1 Host : broker.netid.de Authorization : Bearer SlAV32hkKG Example POST Request POST /userinfo HTTP / 1.1 Host : broker.netid.de Content-Type : application/x-www-form-urlencoded access_token=mF_9.B5f-4.1JqM Example Response HTTP/ 1.1 200 OK Content-Type: application/json { \"sub\" : \"tLTGOmOHb5ix7i9.....\" , \"birthdate\" : \"1980-01-01\" , \"email_verified\" : true , \"address\" : { \"street_address\" : \"Hauptstr. 10\" , \"country\" : \"DE\" , \"formatted\" : \"Hauptstr. 10\\n10117 Berlin\\nDeutschland\" , \"locality\" : \"Berlin\" , \"postal_code\" : \"10117\" }, \"gender\" : \"female\" , \"shipping_address\" : { \"street_address\" : \"Teststr. 12\\nAppartement 47/11\" , \"country\" : \"DE\" , \"formatted\" : \"John Doe\\nTeststr. 12\\nAppartement 47/11\\n10117 Berlin\\nDeutschland\" , \"locality\" : \"Berlin\" , \"recipient\" : \"John Doe\" , \"postal_code\" : \"10117\" }, \"given_name\" : \"Jane\" , \"family_name\" : \"Doe\" , \"email\" : \"jane.doe@example.org\" } Additional information about UserInfo: OIDC specification Implementation Details \u00b6 Optional Parameters \u00b6 The following request parameters are supported for initiating the SSO process and may be passed to the authorize endpoint . For details please refer to the OIDC specification . Parameter Description prompt login for requiring re-authentication of a user during the login process consent for requiring consent to be given again max_age in cases where time of authentication may not be too far in the past - elapsed time in seconds since the last time the End-User was actively authenticated login_hint to provide and email address in order to prevent the broker's user interface from being visible to the user and thus directly redirect to the relevant account provider state The value of this parameter is passed through the entire flow transparently and included when calling back to the redirect_uri . It may be used to recognize how authorize request and asynchronous response are associated in the client nonce If a nonce value was sent in the Authentication Request, a nonce Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the nonce value for replay attacks. The precise method for detecting replay attacks is Client specific. Detailed Call Sequence \u00b6 The sequence of the calls is summarized as follows: Detailed description of the sequence diagram The end user initiates a process on the client's site that involves the use of netID. At this point, the client generates a netID button for an authorize request and redirects the end user to the SSO broker. The SSO broker validates the client's authorize request. The SSO broker generates a new authorize request and redirects the user to the OpenID provider. For their part, the broker appears to the OpenID provider as a relying party client. The OpenID provider validates the SSO broker's authorize request and displays the login screen to the end user; the user logs in with the account provider. The OpenID provider shows an approval page to the end user on which all the data he or she is asked to allow transfer of is displayed. The end user agrees to provide the requested data. The OpenID provider generates an AuthN Response and redirects to the SSO broker. The SSO broker receives the AuthN Response from the OpenID provider. The SSO broker generates a new AuthN Response and redirects to the client's redirect_uri . The client receives the SSO broker's AuthN Response. The actual data query is initiated. The client requests the access token with the SSO broker using the Auth Code (from the AuthN Response) and the Client Credentials. The SSO broker requests the access token from the OP using the Auth Code (from the AuthN Response) and the Client Credentials taken from the client. The OpenID provider issues an access token, giving it to the SSO broker. The SSO broker uses the access token to generate a new access token, giving this one to the client. The client uses the access token with the SSO broker to request the userinfo object. The SSO broker uses the access token to request the userinfo object from the OpenID provider. The OpenID provider grants the userinfo object to the SSO broker. The SSO broker grants the userinfo object to the client. The client has now received the userinfo object. Error Messages \u00b6 If the authorize request fails, the respective error is provided with the callback to the redirect_uri. For details please refer to the OIDC specification . netID Button \u00b6 The depiction of the netID button is explained in the styleguide . Best Practices \u00b6 It is largely up to the relying parties to decide where netID is to be incorporated in clients. Typical cases involve the use of netID as a login or data enrichment mechanism. As a login mechanism, for example, netID may be used like other SSO mechanisms (as well as alongside them) as an authentication alternative, or even used as the sole login method. Whether or not a local account is to be held in addition to the netID account is entirely up to the relying party. netID does not provide a classic session, but the SSO process is available via the authorize process at all times. An email address provided to the broker via a browser will be stored as a 1 st -party cookie; the end user may decide whether to remain logged in with the account provider. The end user's approval for the transfer of master data will be sought only upon the first request for such data, unless the user revokes his or her approval; ideally, this allows SSO flows to be able to run even with interaction from the user. If a relying party would like to also be able to handle authentication of end users independently of netID, it is advisable to ensure that mechanisms for merging or separating accounts are provided for. If local account representations with local credentials exist alongside netID, there should also be support processes for handling them; netID support processes only come into effect in connection with netID accounts themselves. In terms of data enrichment, examples may include using netID during registration processes to make it easier for users to enter information, or as a source for addresses when customers are checking out with their shopping carts online. Whether the data provided is to be used only temporarily or whether it should persist is again left up to the relying parties to freely decide. Each time netID is triggered, the data obtained is up to date in relation to the information currently available to the account provider. With regard to local copies, it may be reasonable to repeatedly request updates and synchronize them. The relying party is to take the principles of data protection into account as they pertain to local data retention. Ideally, data enrichment processes should be initiated in those places where the data is actually needed. This helps to optimize conversion rates while achieving a high degree of data minimization. One thing to be aware of is the verification status of email addresses: if an email address has already been verified with netID, a new request from the relying party to verify the email address is, generally speaking, unnecessary and may cause confusion on the part of the end user. Those netID accounts associated with account providers that are, for their part, email providers, are verified from the outset. If such an email account is deleted, not only does the end user lose the ability to use netID, but all support processes based on that email address will come to nothing. Security Information \u00b6 All communication with netID must be secured by TLS. This also applies to all URLs entered in the developer portal. netID exclusively supports the Authorization Code Flow, so that id_token is only transferred in TLS-secured back-end to back-end communication. Currently, the only token signature supported is none. Use of SDKs \u00b6 There are a large number of OpenID Connect client libraries available in many different language environments. Below, several examples will be given, along with tips for using them. Many client libraries are listed at https://openid.net/developers/libraries/ , and others are easy to find. General \u00b6 Regardless of the choice of environment, it's possible to do the following preliminary experiments: In the developer portal for the partner, create a service, request approval for it, and then create a client for it When choosing which URLs to use, it's possible to generate locally applicable test environments by making an entry in the hosts file of a developer workstation at the endpoints given for service and client and creating and using self-signed certificates. Example \"Entry in hosts\" 127.0.0.1 www.democlient.de Example \"Creating a self-signed certificate\" openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout key.pem -out cert.pem Here, for the Common Name give the host name of the environment you want; so, in this case: www.democlient.de . Using the Client Credentials from the developer portal, the local host entry, and the certificate with the key, it's possible to run through the netID requests. When testing with browsers, it's a good idea to use private windows; otherwise cookies left behind from previous run-throughs may cause confusion. to top Examples \u00b6 PHP In PHP it's possible to use the package https://github.com/jumbojett/OpenID-Connect-PHP . However, some adjustments are necessary, since netID always uses none for the token signature algorithm in the Authorization Code Flow. Installation according to instructions is no problem. The package derives the redirect_uri from its own URL; here, the position of the script in the path of the web server can either be used as redirect_uri when creating the client or configured accordingly in the web server using rewrite rules. The following minimal diff makes OpenIDConnectClient.php netID-compatible: 844a845,848 > $signature = base64url_decode(array_pop($parts)); > if (false === $signature || '' === $signature) { > throw new OpenIDConnectClientException('Error decoding signature from token'); > } 874,877d877 < // netID has 'none' < case 'none' : < $verified=true; < break; A simple sample client may then look like this: <?php /** * * Copyright MITRE 2012 * * OpenIDConnectClient for PHP5 * Author: Michael Jett <mjett@mitre.org> * * Licensed under the Apache License, Version 2.0 (the \"License\"); you may * not use this file except in compliance with the License. You may obtain * a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the * License for the specific language governing permissions and limitations * under the License. * */ require __DIR__ . '/vendor/autoload.php' ; use Jumbojett\\OpenIDConnectClient ; // specify ClientID und secret! $oidc = new OpenIDConnectClient ( 'https://broker.netid.de/' , 'example-clientid' , 'example-secret' ); // if the default redirect_uri is not to be used, a custom value can be set here: // $oidc->setRedirectURL('https://clientexample.org/callback'); // then however a URL-rewrite is necessary, as for example with mod_rewrite from apache: // RewriteEngine On // RewriteRule \"^callback(.*)\" \"/client_example.php$1\" $oidc -> authenticate (); $sub = $oidc -> getVerifiedClaims ( 'sub' ); ?> <html> <head> <title>Example OpenID Connect Client Use</title> <style> body { font-family: 'Lucida Grande', Verdana, Arial, sans-serif; } </style> </head> <body> <div> netID login successful, the Subject Identifier is: <?php echo $sub ; ?> </div> </body> </html> Javascript One highly recommended JavaScript implementation (node.js) of an OpenID Connect relying party can be found here: https://www.npmjs.com/package/openid-client Java Spring Security examples for Java: GitHub:mitreid-connect/simple-web-app GitHub:eugenp/tutorials/tree/master/spring-security-openid Rust A good OpenID Connect relying party client for Rust can be found here: https://docs.rs/crate/oidc/0.2.0 . Go For go the package GitHub:coreos/go-oidc makes a netID login possible. The package may be installed here: go get github . com / coreos / go - oidc There is no explicit support for entering claims, essential or otherwise. The simple example client netid.go first needs to be edited before Client Credentials, host name, and certificates may be entered, after which it can be run using: go run netid . go","title":"Technical Details"},{"location":"sso/#single-sign-on-documentation","text":"This documentation describes the federated Single Sign-on \"netID\", which allows digital services (netID Partners) to register and login netID Users based on their account at so called netID Account Providers. In order to acquire the necessary credentials to leverage this service please refer to the Developer Portal Documentation","title":"Single Sign-on Documentation"},{"location":"sso/#integration-guide","text":"","title":"Integration Guide"},{"location":"sso/#general-overview","text":"The netID Single Sign-on implements the OpenID Connect standard as per the OpenID Connect Core 1.0 specification using the Authorization Code Flow. Partners manage their details as well as service/clients settings in the netID Developer Portal. They can register/manage services and associated clients for these services (Website, App, Mobile, ...). Data transfer authorizations are managed service/client specific. All the clients' communication takes place via EnID's central SSO broker. The SSO broker routes requests to the participating Account Providers, end users always authenticate to the Account Provider that manages their specific account, which is also where they authorize data transfer to a partners' service. Clients specify during authentication calls which master data they request to be authorized by a user for transfer; if the user agrees, the client receives an id_token and a userinfo object as a JSON structure. id_token and userinfo objects also contain the end user's subject identifier ( sub ). netID uses Pairwise Subject Identifiers to derive client specific subject identifiers during authentication requests. The subject identifier is derived using the host portion of the redirect_uri (Callback URL), to ensure that the sub value is the same for all clients of a service make sure that the redirect_uri points to the same host across all clients of a service.","title":"General Overview"},{"location":"sso/#claims-and-scopes","text":"Each time a partner initiates a login flow by calling the authorization endpoint he can define which master data the user should authorize to be transferred. For that purpose, the OpenID Connect/OAuth2 standard defines scope and claim mechanisms. Every OpenID Connect request must always request the openid scope. Moreover, the master data required/asked for by the partner can be expressed in the form of essential claims with netID. In addition to Single Sign-on netID allows users to manage their overall privacy settings in terms of commercial data use, which are managed via the netID Permission Center backend. The netID Broker may be used by eligible netID Partners to acquire an access token that allows access to the Permission Center on behalf of a user, details on this integration can be found here . Once the user authorizes the transfer of that master data (requested using claims), this authorization is stored and not being asked for again unless the users revokes the authorization using the netID Privacy Center. The following scopes are supported by netID: Scope Description openid mandatory scope to initiate a Single Sign-on using the authorize endpoint permission_management optional scope to request an access token to access the netID Permission Center The following claims are supported by netID: Claim Type Description Example sub String Subject - Identifier for the end user at the issuer (netID Account Provider) \"tLTGOmOHb5ix7i9d-hJ4CHXdh_hM2ZsCR2Iy7v7hs1M\" address JSON Object Physical mailing address, containing information (if available) about postal code (ZIP), city or town, steet address and country where the end user's address is located If available: \"street_address\": \"Hauptstr. 10\", \"country\": \"ISO 3166 - ALPHA2\", \"formatted\": \"Hauptstr. 10\\n10117 Berlin\\nDeutschland\", \"locality\": \"Berlin\", \"postal_code\": \"10117\" birthdate String The end user's date of birth \"yyyy-mm-dd\" \"1980-01-01\" email String The end user's email address \" jane.doe@example.org \" email_verified Boolean The verification status of the end user's email address true | false gender String The end user's gender \"female\" | \"male\" | (\"inter\" possible in the future) given_name String The end user's first name (or names) \"Jane\" family_name String The end user's last name \"Doe\" shipping_address JSON Object Shipping address, containing information (if available) about recipient name, steet address, postal code (ZIP), city or town and country If available: \"recipient\": \"Jane Doe\", \"street_address\": \"Hauptstr. 10\", \"country\": \"ISO 3166 - ALPHA2\", \"formatted\": \"Hauptstr. 10\\n10117 Berlin\\nDeutschland\", \"locality\": \"Berlin\", \"postal_code\": \"10117\" The availability of these claims may, however, vary depending on the end user's account provider; in such cases un-supported claims are ignored and the client needs to handle this accordingly. Important: please note! Claims that are not requested as essential are ignored. The same applies to OIDC scope based claims requests, which are by definition also voluntary.","title":"Claims and Scopes"},{"location":"sso/#example-endpoint-calls","text":"","title":"Example Endpoint Calls"},{"location":"sso/#authorize","text":"Requests to the authorize endpoint initiate the Single Sign-on process, clients identify themselves with their client_id and redirect_uri and specify which claims and scopes are to be requested. Some optional parameters are also supported . The netID Broker endpoint for authorize requests is https://broker.netid.de/authorize . All endpoints and supported OpenID Connect features are also available here: https://broker.netid.de/.well-known/openid-configuration Sample Calls are provided given both easy readable as well as in valid URL encoding. The encoding needs to be used for the redirect_uri as well:","title":"Authorize"},{"location":"sso/#token-endpoint","text":"Token requests are carried out after the callback to the client in order to exchange the code (only valid for 30 seconds and to be used only once) provided for an access token (valid for 15 minutes) for the UserInfo Endpoint as well as the id token . It is absolutely necessary that the code used remains unmodified. With token requests, it's particularly important to ensure that the code provided is identical bit-by-bit to the one received in the callback to the redirect_uri. The netID endpoint for token requests is https://broker.netid.de/token . Clients are authenticated using client_id REQUIRED. The client identifier issued to the client during the registration process in the netID Developer Portal. client_secret REQUIRED. The client secret issued to the client during the registration process in the netID Developer Portal. The endpoint supports two authentication methods, namely client_secret_basic (basic authentication) and client_secret_post (credentials in the request body). When using basic authentication the endpoint supports both GET and POST based requests. POST https://broker.netid.de/token HTTP / 1.1 Content-Type : application/x-www-form-urlencoded Authorization : Basic *base64(client_id:client_secret)* code=[code]&redirect_uri=[redirect_uri]&grant_type=authorization_code Example request using curl: Example Request curl -v -u [ user:pass ] -X POST https://broker.netid.de/token -H 'content-type: application/x-www-form-urlencoded; charset=UTF-8' -d 'code=[code]&redirect_uri=[redirect_uri]&grant_type=authorization_code' Example Response { \"access_token\" : \"f3EcGc1l8mjw3gZ3....\" , \"id_token\" : \"eyJhbGciOiJub25lIn0....\" , \"token_type\" : \"Bearer\" , \"expires_in\" : 899 } Decoded ID Token { \"aud\" : \"f6316771-.....\" , \"sub\" : \"geuGIhNTX.....\" , \"auth_time\" : 1603726351 , \"iss\" : \"https://broker.netid.de/\" , \"exp\" : 1603727273 , \"iat\" : 1603726373 } As an alternative clients may use client_secret_post based authentication providing client_id and client_secret using a POST request as shown below: POST /token HTTP / 1.1 Host : broker.netid.de Content-Type : application/x-www-form-urlencoded code=[code]&redirect_uri=[redirect_uri]&grant_type=authorization_code&client_id=CLIENT_ID_GOES_HERE&client_secret=CLIENT_SECRET_GOES_HERE","title":"Token Endpoint"},{"location":"sso/#userinfo-endpoint","text":"The access token is used to retrieve the requested claims from the UserInfo Endpoint. Claims are returned as a JSON object. The netID Broker endpoint for userinfo requests is https://broker.netid.de/userinfo . Example GET Request GET /userinfo HTTP / 1.1 Host : broker.netid.de Authorization : Bearer SlAV32hkKG Example POST Request POST /userinfo HTTP / 1.1 Host : broker.netid.de Content-Type : application/x-www-form-urlencoded access_token=mF_9.B5f-4.1JqM Example Response HTTP/ 1.1 200 OK Content-Type: application/json { \"sub\" : \"tLTGOmOHb5ix7i9.....\" , \"birthdate\" : \"1980-01-01\" , \"email_verified\" : true , \"address\" : { \"street_address\" : \"Hauptstr. 10\" , \"country\" : \"DE\" , \"formatted\" : \"Hauptstr. 10\\n10117 Berlin\\nDeutschland\" , \"locality\" : \"Berlin\" , \"postal_code\" : \"10117\" }, \"gender\" : \"female\" , \"shipping_address\" : { \"street_address\" : \"Teststr. 12\\nAppartement 47/11\" , \"country\" : \"DE\" , \"formatted\" : \"John Doe\\nTeststr. 12\\nAppartement 47/11\\n10117 Berlin\\nDeutschland\" , \"locality\" : \"Berlin\" , \"recipient\" : \"John Doe\" , \"postal_code\" : \"10117\" }, \"given_name\" : \"Jane\" , \"family_name\" : \"Doe\" , \"email\" : \"jane.doe@example.org\" } Additional information about UserInfo: OIDC specification","title":"UserInfo Endpoint"},{"location":"sso/#implementation-details","text":"","title":"Implementation Details"},{"location":"sso/#optional-parameters","text":"The following request parameters are supported for initiating the SSO process and may be passed to the authorize endpoint . For details please refer to the OIDC specification . Parameter Description prompt login for requiring re-authentication of a user during the login process consent for requiring consent to be given again max_age in cases where time of authentication may not be too far in the past - elapsed time in seconds since the last time the End-User was actively authenticated login_hint to provide and email address in order to prevent the broker's user interface from being visible to the user and thus directly redirect to the relevant account provider state The value of this parameter is passed through the entire flow transparently and included when calling back to the redirect_uri . It may be used to recognize how authorize request and asynchronous response are associated in the client nonce If a nonce value was sent in the Authentication Request, a nonce Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the nonce value for replay attacks. The precise method for detecting replay attacks is Client specific.","title":"Optional Parameters"},{"location":"sso/#detailed-call-sequence","text":"The sequence of the calls is summarized as follows: Detailed description of the sequence diagram The end user initiates a process on the client's site that involves the use of netID. At this point, the client generates a netID button for an authorize request and redirects the end user to the SSO broker. The SSO broker validates the client's authorize request. The SSO broker generates a new authorize request and redirects the user to the OpenID provider. For their part, the broker appears to the OpenID provider as a relying party client. The OpenID provider validates the SSO broker's authorize request and displays the login screen to the end user; the user logs in with the account provider. The OpenID provider shows an approval page to the end user on which all the data he or she is asked to allow transfer of is displayed. The end user agrees to provide the requested data. The OpenID provider generates an AuthN Response and redirects to the SSO broker. The SSO broker receives the AuthN Response from the OpenID provider. The SSO broker generates a new AuthN Response and redirects to the client's redirect_uri . The client receives the SSO broker's AuthN Response. The actual data query is initiated. The client requests the access token with the SSO broker using the Auth Code (from the AuthN Response) and the Client Credentials. The SSO broker requests the access token from the OP using the Auth Code (from the AuthN Response) and the Client Credentials taken from the client. The OpenID provider issues an access token, giving it to the SSO broker. The SSO broker uses the access token to generate a new access token, giving this one to the client. The client uses the access token with the SSO broker to request the userinfo object. The SSO broker uses the access token to request the userinfo object from the OpenID provider. The OpenID provider grants the userinfo object to the SSO broker. The SSO broker grants the userinfo object to the client. The client has now received the userinfo object.","title":"Detailed Call Sequence"},{"location":"sso/#error-messages","text":"If the authorize request fails, the respective error is provided with the callback to the redirect_uri. For details please refer to the OIDC specification .","title":"Error Messages"},{"location":"sso/#netid-button","text":"The depiction of the netID button is explained in the styleguide .","title":"netID Button"},{"location":"sso/#best-practices","text":"It is largely up to the relying parties to decide where netID is to be incorporated in clients. Typical cases involve the use of netID as a login or data enrichment mechanism. As a login mechanism, for example, netID may be used like other SSO mechanisms (as well as alongside them) as an authentication alternative, or even used as the sole login method. Whether or not a local account is to be held in addition to the netID account is entirely up to the relying party. netID does not provide a classic session, but the SSO process is available via the authorize process at all times. An email address provided to the broker via a browser will be stored as a 1 st -party cookie; the end user may decide whether to remain logged in with the account provider. The end user's approval for the transfer of master data will be sought only upon the first request for such data, unless the user revokes his or her approval; ideally, this allows SSO flows to be able to run even with interaction from the user. If a relying party would like to also be able to handle authentication of end users independently of netID, it is advisable to ensure that mechanisms for merging or separating accounts are provided for. If local account representations with local credentials exist alongside netID, there should also be support processes for handling them; netID support processes only come into effect in connection with netID accounts themselves. In terms of data enrichment, examples may include using netID during registration processes to make it easier for users to enter information, or as a source for addresses when customers are checking out with their shopping carts online. Whether the data provided is to be used only temporarily or whether it should persist is again left up to the relying parties to freely decide. Each time netID is triggered, the data obtained is up to date in relation to the information currently available to the account provider. With regard to local copies, it may be reasonable to repeatedly request updates and synchronize them. The relying party is to take the principles of data protection into account as they pertain to local data retention. Ideally, data enrichment processes should be initiated in those places where the data is actually needed. This helps to optimize conversion rates while achieving a high degree of data minimization. One thing to be aware of is the verification status of email addresses: if an email address has already been verified with netID, a new request from the relying party to verify the email address is, generally speaking, unnecessary and may cause confusion on the part of the end user. Those netID accounts associated with account providers that are, for their part, email providers, are verified from the outset. If such an email account is deleted, not only does the end user lose the ability to use netID, but all support processes based on that email address will come to nothing.","title":"Best Practices"},{"location":"sso/#security-information","text":"All communication with netID must be secured by TLS. This also applies to all URLs entered in the developer portal. netID exclusively supports the Authorization Code Flow, so that id_token is only transferred in TLS-secured back-end to back-end communication. Currently, the only token signature supported is none.","title":"Security Information"},{"location":"sso/#use-of-sdks","text":"There are a large number of OpenID Connect client libraries available in many different language environments. Below, several examples will be given, along with tips for using them. Many client libraries are listed at https://openid.net/developers/libraries/ , and others are easy to find.","title":"Use of SDKs"},{"location":"sso/#general","text":"Regardless of the choice of environment, it's possible to do the following preliminary experiments: In the developer portal for the partner, create a service, request approval for it, and then create a client for it When choosing which URLs to use, it's possible to generate locally applicable test environments by making an entry in the hosts file of a developer workstation at the endpoints given for service and client and creating and using self-signed certificates. Example \"Entry in hosts\" 127.0.0.1 www.democlient.de Example \"Creating a self-signed certificate\" openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout key.pem -out cert.pem Here, for the Common Name give the host name of the environment you want; so, in this case: www.democlient.de . Using the Client Credentials from the developer portal, the local host entry, and the certificate with the key, it's possible to run through the netID requests. When testing with browsers, it's a good idea to use private windows; otherwise cookies left behind from previous run-throughs may cause confusion. to top","title":"General"},{"location":"sso/#examples","text":"PHP In PHP it's possible to use the package https://github.com/jumbojett/OpenID-Connect-PHP . However, some adjustments are necessary, since netID always uses none for the token signature algorithm in the Authorization Code Flow. Installation according to instructions is no problem. The package derives the redirect_uri from its own URL; here, the position of the script in the path of the web server can either be used as redirect_uri when creating the client or configured accordingly in the web server using rewrite rules. The following minimal diff makes OpenIDConnectClient.php netID-compatible: 844a845,848 > $signature = base64url_decode(array_pop($parts)); > if (false === $signature || '' === $signature) { > throw new OpenIDConnectClientException('Error decoding signature from token'); > } 874,877d877 < // netID has 'none' < case 'none' : < $verified=true; < break; A simple sample client may then look like this: <?php /** * * Copyright MITRE 2012 * * OpenIDConnectClient for PHP5 * Author: Michael Jett <mjett@mitre.org> * * Licensed under the Apache License, Version 2.0 (the \"License\"); you may * not use this file except in compliance with the License. You may obtain * a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the * License for the specific language governing permissions and limitations * under the License. * */ require __DIR__ . '/vendor/autoload.php' ; use Jumbojett\\OpenIDConnectClient ; // specify ClientID und secret! $oidc = new OpenIDConnectClient ( 'https://broker.netid.de/' , 'example-clientid' , 'example-secret' ); // if the default redirect_uri is not to be used, a custom value can be set here: // $oidc->setRedirectURL('https://clientexample.org/callback'); // then however a URL-rewrite is necessary, as for example with mod_rewrite from apache: // RewriteEngine On // RewriteRule \"^callback(.*)\" \"/client_example.php$1\" $oidc -> authenticate (); $sub = $oidc -> getVerifiedClaims ( 'sub' ); ?> <html> <head> <title>Example OpenID Connect Client Use</title> <style> body { font-family: 'Lucida Grande', Verdana, Arial, sans-serif; } </style> </head> <body> <div> netID login successful, the Subject Identifier is: <?php echo $sub ; ?> </div> </body> </html> Javascript One highly recommended JavaScript implementation (node.js) of an OpenID Connect relying party can be found here: https://www.npmjs.com/package/openid-client Java Spring Security examples for Java: GitHub:mitreid-connect/simple-web-app GitHub:eugenp/tutorials/tree/master/spring-security-openid Rust A good OpenID Connect relying party client for Rust can be found here: https://docs.rs/crate/oidc/0.2.0 . Go For go the package GitHub:coreos/go-oidc makes a netID login possible. The package may be installed here: go get github . com / coreos / go - oidc There is no explicit support for entering claims, essential or otherwise. The simple example client netid.go first needs to be edited before Client Credentials, host name, and certificates may be entered, after which it can be run using: go run netid . go","title":"Examples"},{"location":"sso/plugins/","text":"Plugins \u00b6 Magento Plugin \u00b6 Magento Marketplace OXID Plugin \u00b6 OXID Exhange Shopware Plugin \u00b6 Shopware Store","title":"Plugins"},{"location":"sso/plugins/#plugins","text":"","title":"Plugins"},{"location":"sso/plugins/#magento-plugin","text":"Magento Marketplace","title":"Magento Plugin"},{"location":"sso/plugins/#oxid-plugin","text":"OXID Exhange","title":"OXID Plugin"},{"location":"sso/plugins/#shopware-plugin","text":"Shopware Store","title":"Shopware Plugin"},{"location":"sso/styleguide/","text":"Styleguide \u00b6 On the partners' side (technical term Relying Party) netID provides a smooth login experience for the user - besides the usual login or registration. This is done using the netID button. The netID button is - like all other SSO services - clearly separated from the usual login / registration mask. Amplified by the brand specific netID green the netID Button should be clearly perceived as an alternative login possibility. Integration of the login button \u00b6 Different buttons are available for integration in the frontend. netID currently offers four \"Call to Action\" buttons. These are available in three different sizes (small / medium / large). The integration is done via the code snippets provided below . If you have additional requirements for a netID \"Call to Action\" button for your app or website, please do not hesitate to contact us. Please indicate the size and the button text you would like to use, to evaluate alternatives feel free to use the Button Configurator . We will check your requirements against our specifications and you can use the code snippet provided by the configurator. Please send your special requirements to: info@enid.eu You want to inform your users - beyond the netID button - with further short information about netID? For this purpose we have created a short description which you can use - please do not change it. Shortened versions of the text are possible. Alternatives are indicated with brackets < > . netID \u2013 <Ihr/Der> Universal-Login f\u00fcrs Internet: <Die pers\u00f6nliche> netID ist der neue europ\u00e4ische Standard f\u00fcr den einfachen, bequemen und sicheren Login bei immer mehr Internetdiensten </auf immer mehr Webseiten> . Nur noch ein Passwort merken, pers\u00f6nliche Daten und Zustimmungen selbst zentral im netID Privacy Center organisieren und so jederzeit den \u00dcberblick behalten! Mehr Infos auf netid.de You are also welcome to link to the netID website. On this page users will find all further information about netID. Furthermore, they can register for netID and log in to their individual netID Privacy Center. https://netid.de netID login buttons \u00b6 CTA text: \"Login mit netID\" \u00b6 ```css tab=\"#1 Small\" Login mit netID @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=small]{font-size:12px;line-height:24px} ```css tab=\"#2 Medium\" <button data-button-size=\"medium\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">Login mit netID</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=medium]{font-size:14px;line-height:32px}</style></button> ```css tab=\"#3 Large\" Login mit netID @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=large]{font-size:16px;line-height:40px} ### CTA text: \"netID Login\" ![netID login Buttons](../images/styleguide/20200312_netid_buttons_2.png) ```css tab=\"#4 Small\" <button data-button-size=\"small\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">netID Login</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=small]{font-size:12px;line-height:24px}</style></button> ```css tab=\"#5 Medium\" netID Login @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=medium]{font-size:14px;line-height:32px} ```css tab=\"#6 Large\" <button data-button-size=\"large\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">netID Login</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=large]{font-size:16px;line-height:40px}</style></button> CTA text: \"Mit netID anmelden\" \u00b6 ```css tab=\"#7 Small\" Mit netID anmelden @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=small]{font-size:12px;line-height:24px} ```css tab=\"#8 Medium\" <button data-button-size=\"medium\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">Mit netID anmelden</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=medium]{font-size:14px;line-height:32px}</style></button> ```css tab=\"#9 Large\" Mit netID anmelden @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=large]{font-size:16px;line-height:40px} ### CTA text: \"netID\" ![netID login Buttons](../images/styleguide/20200312_netid_buttons_4.png) ```css tab=\"#10 Small\" <button data-button-size=\"small\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">netID</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=small]{font-size:12px;line-height:24px}</style></button> ```css tab=\"#11 Medium\" netID @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=medium]{font-size:14px;line-height:32px} ```css tab=\"#12 Large\" <button data-button-size=\"large\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">netID</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=large]{font-size:16px;line-height:40px}</style></button> netID Button Configurator \u00b6 CTA button text Login mit netID netID Login Mit netID anmelden netID Custom text Button size Small Normal Large Custom size Full width Custom button text Font size (px, pt, rem, re) Width (px, %) Height (px) Border radius (px) Preview HTML code generation Expert mode with external CSS and SVG assets In expert mode, the specified CSS and SVG symbol definition must be implemented into your project accordingly. This mode is useful if you are a web developer and multiple netID buttons need to be implemented. CSS stylesheet SVG icon as symbol","title":"Styleguide"},{"location":"sso/styleguide/#styleguide","text":"On the partners' side (technical term Relying Party) netID provides a smooth login experience for the user - besides the usual login or registration. This is done using the netID button. The netID button is - like all other SSO services - clearly separated from the usual login / registration mask. Amplified by the brand specific netID green the netID Button should be clearly perceived as an alternative login possibility.","title":"Styleguide"},{"location":"sso/styleguide/#integration-of-the-login-button","text":"Different buttons are available for integration in the frontend. netID currently offers four \"Call to Action\" buttons. These are available in three different sizes (small / medium / large). The integration is done via the code snippets provided below . If you have additional requirements for a netID \"Call to Action\" button for your app or website, please do not hesitate to contact us. Please indicate the size and the button text you would like to use, to evaluate alternatives feel free to use the Button Configurator . We will check your requirements against our specifications and you can use the code snippet provided by the configurator. Please send your special requirements to: info@enid.eu You want to inform your users - beyond the netID button - with further short information about netID? For this purpose we have created a short description which you can use - please do not change it. Shortened versions of the text are possible. Alternatives are indicated with brackets < > . netID \u2013 <Ihr/Der> Universal-Login f\u00fcrs Internet: <Die pers\u00f6nliche> netID ist der neue europ\u00e4ische Standard f\u00fcr den einfachen, bequemen und sicheren Login bei immer mehr Internetdiensten </auf immer mehr Webseiten> . Nur noch ein Passwort merken, pers\u00f6nliche Daten und Zustimmungen selbst zentral im netID Privacy Center organisieren und so jederzeit den \u00dcberblick behalten! Mehr Infos auf netid.de You are also welcome to link to the netID website. On this page users will find all further information about netID. Furthermore, they can register for netID and log in to their individual netID Privacy Center. https://netid.de","title":"Integration of the login button"},{"location":"sso/styleguide/#netid-login-buttons","text":"","title":"netID login buttons"},{"location":"sso/styleguide/#cta-text-login-mit-netid","text":"```css tab=\"#1 Small\" Login mit netID @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=small]{font-size:12px;line-height:24px} ```css tab=\"#2 Medium\" <button data-button-size=\"medium\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">Login mit netID</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=medium]{font-size:14px;line-height:32px}</style></button> ```css tab=\"#3 Large\" Login mit netID @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=large]{font-size:16px;line-height:40px} ### CTA text: \"netID Login\" ![netID login Buttons](../images/styleguide/20200312_netid_buttons_2.png) ```css tab=\"#4 Small\" <button data-button-size=\"small\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">netID Login</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=small]{font-size:12px;line-height:24px}</style></button> ```css tab=\"#5 Medium\" netID Login @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=medium]{font-size:14px;line-height:32px} ```css tab=\"#6 Large\" <button data-button-size=\"large\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">netID Login</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=large]{font-size:16px;line-height:40px}</style></button>","title":"CTA text: \"Login mit netID\""},{"location":"sso/styleguide/#cta-text-mit-netid-anmelden","text":"```css tab=\"#7 Small\" Mit netID anmelden @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=small]{font-size:12px;line-height:24px} ```css tab=\"#8 Medium\" <button data-button-size=\"medium\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">Mit netID anmelden</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=medium]{font-size:14px;line-height:32px}</style></button> ```css tab=\"#9 Large\" Mit netID anmelden @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=large]{font-size:16px;line-height:40px} ### CTA text: \"netID\" ![netID login Buttons](../images/styleguide/20200312_netid_buttons_4.png) ```css tab=\"#10 Small\" <button data-button-size=\"small\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">netID</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=small]{font-size:12px;line-height:24px}</style></button> ```css tab=\"#11 Medium\" netID @font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(<a href=\"https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff\">https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff</a>) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em} button[data-button-size=medium]{font-size:14px;line-height:32px} ```css tab=\"#12 Large\" <button data-button-size=\"large\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><polygon fill=\"#fff\" points=\"19.14 11.43 21.63 8.99 26.33 13.69 39.59 .5 42.01 2.85 26.25 18.61\"></polygon><path fill=\"#fff\" d=\"M38.22,11.17 L36.22,13.17 C37.35,17 37.09,20 33.1,24 L28.45,28.64 L11.55,11.73 L16.23,7.05 C21.23,2.05 25.33,2.45 30.12,5.4 L32,3.53 C26.07,-0.47 20.47,-0.76 14.4,5.31 L0.67,19 L21.15,39.5 L34.87,25.79 C39.93,20.72 40.32,16.3 38.22,11.17 Z\"></path></svg> <span data-button-text=\"\">netID</span><style>@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;src:local('IBM Plex Sans SemiBold'),local('IBMPlexSans-SemiBold'),url(https://image.netid.de/ci/netid/global/fonts/ibmplex/IBMPlexSans-SemiBold-webfont.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}button{display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;width:100%;max-width:400px;margin:auto;padding:0 1em 0 .875em;border:0 solid transparent;border-radius:3px;background-color:#76b82a;cursor:pointer;font-family:'IBM Plex Sans',Courier;color:#fff;text-decoration:none;text-transform:none;white-space:nowrap;outline:0}@media screen and (min-width:768px){button{width:auto;margin:0}}button svg{width:1.25em;height:1.25em;margin-right:.438em}</style><style size-style=\"\">button[data-button-size=large]{font-size:16px;line-height:40px}</style></button>","title":"CTA text: \"Mit netID anmelden\""},{"location":"sso/styleguide/#netid-button-configurator","text":"CTA button text Login mit netID netID Login Mit netID anmelden netID Custom text Button size Small Normal Large Custom size Full width Custom button text Font size (px, pt, rem, re) Width (px, %) Height (px) Border radius (px)","title":"netID Button Configurator"}]}